{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nuudw-adf01-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuDL_NAM_nam')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_NAM",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "nam",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "nam",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "SourceNuudlNAM",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_NAM"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "nam"
									},
									"SourceTableName": {
										"type": "String",
										"value": "nam"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_NAM"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "nam"
									},
									"SourceTableName": {
										"type": "String",
										"value": "nam"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_nam",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`sub_address_id` \r\n,`sub_address_floor` \r\n,`sub_address_suite` \r\n,`sub_address_dar_id` \r\n,`sub_address_mad_id` \r\n,`sub_address_kvhx_id` \r\n,`sub_address_official` \r\n,`sub_address_deleted` \r\n,`address_id` \r\n,`address_street_name` \r\n,`address_street_no` \r\n,`address_street_no_suffix` \r\n,`address_postcode` \r\n,`address_city` \r\n,`address_municipality` \r\n,`address_district` \r\n,`address_region` \r\n,`address_street_code` \r\n,`address_region_code` \r\n,`address_dar_id` \r\n,`address_mad_id` \r\n,`address_kvhx_id` \r\n--,`sub_address_kvhx_id_2` \r\n,`address_official` \r\n,`address_deleted` \r\n,`NUUDL_BaseSourceFilename` \r\n,`NUUDL_BaseBatchID` \r\n,`NUUDL_BaseProcessedTimestamp` \r\n,`Snapshot` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n,`NUUDL_CuratedSourceFilename` \r\n \r\nFROM dai.nam.`nam`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'\r\n\tAND sub_address_id IS NOT NULL",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [SourceNuudlNAM].[nam]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "NuuDL_NAM_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.nam.nam"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[SourceNuudlNAM].[nam]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_nam",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "SourceNuudlNAM.nam",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_NAM",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "nam",
									"type": "String"
								},
								"SourceTableName": {
									"value": "nam",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuData_Chipper_ChipperTicketsComments')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsComments"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "ChipperTicketsComments",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuuDataChipper",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "DWModifiedDate",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "nuuMeta.[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuData_Chipper"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "exportNuuDW"
									},
									"SourceTableName": {
										"type": "String",
										"value": "ChipperTicketsComments"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "SqlServer"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "True"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_ChipperTicketsComments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[comments.author] \r\n,[comments.text] \r\n,[comments.timestamp] \r\n,[id] \r\n,[sourceFilename] \r\n,[processedTimestamp] \r\n,[hour] \r\n,[quarterhour] \r\n,[DWSourceFilePath] AS [SRC_DWSourceFilePath]\r\n,[DWIsCurrent] AS [SRC_DWIsCurrent]\r\n,[DWValidFromDate] AS [SRC_DWValidFromDate]\r\n,[DWValidToDate] AS [SRC_DWValidToDate]\r\n,[DWCreatedDate] AS [SRC_DWCreatedDate]\r\n,[DWModifiedDate] AS [SRC_DWModifiedDate]\r\n,[DWIsDeletedInSource] AS [SRC_DWIsDeletedInSource]\r\n,[DWDeletedInSourceDate] AS [SRC_DWDeletedInSourceDate]\r\n \r\nFROM exportNuuDW.[ChipperTicketsComments]\r\n WHERE DWModifiedDate > convert(datetime, stuff(stuff(stuff('@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}', 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuuDataChipper].[ChipperTicketsComments]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsComments"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuuDataChipper].[ChipperTicketsComments]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_ChipperTicketsComments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[LoadSourceObjectHistory]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuuDataChipper.ChipperTicketsComments",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								},
								"HistoryTrackingColumns": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceTableName": {
									"value": "ChipperTicketsComments",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuData_Chipper_ChipperTicketsEventLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsEventLog"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "ChipperTicketsEventLog",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuuDataChipper",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "DWModifiedDate",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "nuuMeta.[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuData_Chipper"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "exportNuuDW"
									},
									"SourceTableName": {
										"type": "String",
										"value": "ChipperTicketsEventLog"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "SqlServer"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "True"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_ChipperTicketsEventLog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[eventLog.eventType] \r\n,[eventLog.source.applicationId] \r\n,[eventLog.source.userId] \r\n,[id] \r\n,[eventLog.timestamp] \r\n,[sourceFilename] \r\n,[processedTimestamp] \r\n,[hour] \r\n,[quarterhour] \r\n,[DWSourceFilePath] AS [SRC_DWSourceFilePath]\r\n,[DWIsCurrent] AS [SRC_DWIsCurrent]\r\n,[DWValidFromDate] AS [SRC_DWValidFromDate]\r\n,[DWValidToDate] AS [SRC_DWValidToDate]\r\n,[DWCreatedDate] AS [SRC_DWCreatedDate]\r\n,[DWModifiedDate] AS [SRC_DWModifiedDate]\r\n,[DWIsDeletedInSource] AS [SRC_DWIsDeletedInSource]\r\n,[DWDeletedInSourceDate] AS [SRC_DWDeletedInSourceDate]\r\n,[eventLog.source.error.userId] \r\n \r\nFROM exportNuuDW.[ChipperTicketsEventLog]\r\n WHERE DWModifiedDate > convert(datetime, stuff(stuff(stuff('@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}', 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuuDataChipper].[ChipperTicketsEventLog]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsEventLog"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuuDataChipper].[ChipperTicketsEventLog]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_ChipperTicketsEventLog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[LoadSourceObjectHistory]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuuDataChipper.ChipperTicketsEventLog",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								},
								"HistoryTrackingColumns": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceTableName": {
									"value": "ChipperTicketsEventLog",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuData_Chipper_ChipperTicketsTags')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsTags"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "ChipperTicketsTags",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuuDataChipper",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "DWModifiedDate",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "nuuMeta.[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuData_Chipper"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "exportNuuDW"
									},
									"SourceTableName": {
										"type": "String",
										"value": "ChipperTicketsTags"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "SqlServer"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "True"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_ChipperTicketsTags",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[id] \r\n,[tags] \r\n,[sourceFilename] \r\n,[processedTimestamp] \r\n,[hour] \r\n,[quarterhour] \r\n,[DWSourceFilePath] AS [SRC_DWSourceFilePath]\r\n,[DWIsCurrent] AS [SRC_DWIsCurrent]\r\n,[DWValidFromDate] AS [SRC_DWValidFromDate]\r\n,[DWValidToDate] AS [SRC_DWValidToDate]\r\n,[DWCreatedDate] AS [SRC_DWCreatedDate]\r\n,[DWModifiedDate] AS [SRC_DWModifiedDate]\r\n,[DWIsDeletedInSource] AS [SRC_DWIsDeletedInSource]\r\n,[DWDeletedInSourceDate] AS [SRC_DWDeletedInSourceDate]\r\n \r\nFROM exportNuuDW.[ChipperTicketsTags]\r\n WHERE DWModifiedDate > convert(datetime, stuff(stuff(stuff('@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}', 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuuDataChipper].[ChipperTicketsTags]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsTags"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuuDataChipper].[ChipperTicketsTags]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_ChipperTicketsTags",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[LoadSourceObjectHistory]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuuDataChipper.ChipperTicketsTags",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								},
								"HistoryTrackingColumns": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceTableName": {
									"value": "ChipperTicketsTags",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuData_Chipper_ChipperTicketsTickets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsTickets"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "ChipperTicketsTickets",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuuDataChipper",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "DWModifiedDate",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "nuuMeta.[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuData_Chipper"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "exportNuuDW"
									},
									"SourceTableName": {
										"type": "String",
										"value": "ChipperTicketsTickets"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "SqlServer"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "True"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_ChipperTicketsTickets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[appointment.id] \r\n,[assignee] \r\n,[created] \r\n,[customer.contact.channels.email.address] \r\n,[customer.contact.channels.email.preferred] \r\n,[customer.contact.channels.phone.number] \r\n,[customer.contact.channels.phone.preferred] \r\n,[customer.contact.name] \r\n,[customer.id] \r\n,[id] \r\n,[impact] \r\n,[issue.description] \r\n,[issue.start] \r\n,[issue.type] \r\n,[item.lid] \r\n,[reported] \r\n,[resolved] \r\n,[sla.id] \r\n,[status] \r\n,[subject] \r\n,[updated] \r\n,[sourceFilename] \r\n,[processedTimestamp] \r\n,[hour] \r\n,[quarterhour] \r\n,[DWSourceFilePath] AS [SRC_DWSourceFilePath]\r\n,[DWIsCurrent] AS [SRC_DWIsCurrent]\r\n,[DWValidFromDate] AS [SRC_DWValidFromDate]\r\n,[DWValidToDate] AS [SRC_DWValidToDate]\r\n,[DWCreatedDate] AS [SRC_DWCreatedDate]\r\n,[DWModifiedDate] AS [SRC_DWModifiedDate]\r\n,[DWIsDeletedInSource] AS [SRC_DWIsDeletedInSource]\r\n,[DWDeletedInSourceDate] AS [SRC_DWDeletedInSourceDate]\r\n,[product.id] \r\n,[outageid] \r\n \r\nFROM exportNuuDW.[ChipperTicketsTickets]\r\n WHERE DWModifiedDate > convert(datetime, stuff(stuff(stuff('@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}', 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuuDataChipper].[ChipperTicketsTickets]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "NuuData_Chipper_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "exportNuuDW.ChipperTicketsTickets"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuuDataChipper].[ChipperTicketsTickets]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_ChipperTicketsTickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[LoadSourceObjectHistory]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuuDataChipper.ChipperTicketsTickets",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								},
								"HistoryTrackingColumns": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuData_Chipper",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "exportNuuDW",
									"type": "String"
								},
								"SourceTableName": {
									"value": "ChipperTicketsTickets",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "True",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlcustomercategory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlcustomercategory",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlcustomercategory"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlcustomercategory"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlcustomercategory",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`localized_name_json_dan` \r\n,`id` \r\n,`name` \r\n,`parent_customer_category_id` \r\n,`external_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlcustomercategory`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlcustomercategory]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlcustomercategory"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlcustomercategory]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlcustomercategory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlcustomercategory",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlcustomercategory",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmldistributionchannel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmldistributionchannel",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmldistributionchannel"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmldistributionchannel"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmldistributionchannel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`localized_name_json_dan` \r\n,`id` \r\n,`name` \r\n,`extended_parameters_json_insurancePolicyPrefix` \r\n,`extended_parameters_json_storeAddress` \r\n,`external_id` \r\n,`extended_parameters_json_storeName` \r\n,`extended_parameters_json__corrupt_record` \r\n,`extended_parameters_json_channelType` \r\n,`extended_parameters_json_storeID` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmldistributionchannel`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmldistributionchannel]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmldistributionchannel"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmldistributionchannel]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmldistributionchannel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmldistributionchannel",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmldistributionchannel",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlprodcatprodoffering')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlprodcatprodoffering",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodcatprodoffering"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodcatprodoffering"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlprodcatprodoffering",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`product_catalog_id` \r\n,`product_offering_id` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlprodcatprodoffering`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlprodcatprodoffering]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlprodcatprodoffering"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlprodcatprodoffering]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlprodcatprodoffering",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlprodcatprodoffering",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlprodcatprodoffering",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlprodofferingpricespecification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodofferingpricespecification"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodofferingpricespecification"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlprodofferingpricespecification",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`external_id` \r\n,`id` \r\n,`name` \r\n,`price_type` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`localized_name_json_dan` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.netcracker.`pimnrmlprodofferingpricespecification`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlprodofferingpricespecification]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlprodofferingpricespecification"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlprodofferingpricespecification]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlprodofferingpricespecification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductcatalog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductcatalog",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductcatalog"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductcatalog"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductcatalog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\nSELECT \n`localized_name_json_dan` \n,`id` \n,`name` \n,`external_id` \n--,`extended_parameters` \n,`cdc_revision_id` \n,`NUUDL_ValidFrom` \n,`NUUDL_ValidTo` \n,`NUUDL_IsCurrent` \n,`NUUDL_ID` \n,`NUUDL_CuratedBatchID` \n \nFROM dai.netcracker.`pimnrmlproductcatalog`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductcatalog]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductcatalog"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductcatalog]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductcatalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductcatalog",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductcatalog",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductfamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductfamily",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductfamily"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductfamily"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductfamily",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`localized_name_json_dan` \r\n,`id` \r\n,`name` \r\n,`external_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlproductfamily`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductfamily]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductfamily"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductfamily]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductfamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductfamily",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductfamily",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductoffering')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductoffering",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductoffering"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductoffering"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductoffering",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\nSELECT \n`available_from` \n,`available_to` \n,`localized_name_json_dan` \n,`id` \n,`is_active` \n,`name` \n,`product_family_id` \n,`product_offering_charging_type` \n,`sku_id` \n,`tags_json__corrupt_record` \n,`weight` \n,`external_id` \n,`extended_parameters_json_termsConditionsType` \n,`extended_parameters_json_offeringBusinessUse` \n,`extended_parameters_json__corrupt_record` \n,`extended_parameters_json_mobileAddOnType` \n,`extended_parameters_json_deviceType` \n,`extended_parameters_json_offeringBusinessType` \n,`extended_parameters_json_migrationId` \n,`extended_parameters_json_NumberInWarehouse` \n,`extended_parameters_json_phoneNumberOfferingType` \n,`extended_parameters_json_noInWarehouse` \n,`extended_parameters_json_simOfferingType` \n,`tangible_product_id` \n--,`included_distribution_channels_json__corrupt_record` \n--,`included_brand_json__corrupt_record` \n,`included_markets_json__corrupt_record` \n,`included_customer_categories_json__corrupt_record` \n,`excluded_markets` \n,`excluded_customer_categories` \n--,`excluded_distribution_channels` \n,`product_specification_id` \n,`cdc_revision_id` \n,`is_current` \n,`NUUDL_ValidFrom` \n,`NUUDL_ValidTo` \n,`NUUDL_IsCurrent` \n,`NUUDL_ID` \n--,`NUUDL_CuratedBatchID` \n \nFROM dai.netcracker.`pimnrmlproductoffering`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductoffering]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductoffering"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductoffering]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductoffering",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductoffering",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductoffering",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductofferingpricechargeitem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargeitem"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargeitem"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductofferingpricechargeitem",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`amount` \r\n,`applied_from` \r\n,`applied_to` \r\n,`down_payment_amount` \r\n,`id` \r\n,`is_overridable` \r\n,`price_key_id` \r\n,`cdc_revision_id` \r\n,`context_top_offering_ids_json__corrupt_record` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlproductofferingpricechargeitem`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductofferingpricechargeitem]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductofferingpricechargeitem"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductofferingpricechargeitem]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductofferingpricechargeitem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductofferingpricechargekey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargekey"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargekey"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductofferingpricechargekey",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`available_from` \r\n,`available_to` \r\n,`currency_id` \r\n,`localized_name` \r\n,`id` \r\n,`is_base` \r\n,`is_default` \r\n,`name` \r\n,`price_list_id` \r\n,`prod_offering_price_spec_id` \r\n,`alternate_price_key_id` \r\n,`external_id` \r\n,`prod_offering_id` \r\n,`tangible_product_sale_type_id` \r\n,`installment_plan_id` \r\n,`price_eligibility_condition_id` \r\n,`cdc_revision_id` \r\n,`prod_offering_price_policy_condition_ids_json__corrupt_record` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlproductofferingpricechargekey`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductofferingpricechargekey]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductofferingpricechargekey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductofferingpricechargekey]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductofferingpricechargekey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlpromotionprodofferingpricealteration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlpromotionprodofferingpricealteration"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlpromotionprodofferingpricealteration"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlpromotionprodofferingpricealteration",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`amount` \r\n,`amount_percentage` \r\n,`currency_id` \r\n,`id` \r\n,`name` \r\n,`prod_offering_price_specification_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`localized_name_json_dan` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlpromotionprodofferingpricealteration`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlpromotionprodofferingpricealteration]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlpromotionprodofferingpricealteration"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlpromotionprodofferingpricealteration]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlpromotionprodofferingpricealteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_Cubus31_PCTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceCubus31PCTI",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceSchemaName]\n ,[SourceObjectName]\n,[SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n  WHERE SourceConnectionName = 'Cubus31_PCTI'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT \n'AzureSqlDatabase' AS SourceSystemTypeName\t\n,COLUMNS.[TABLE_CATALOG] AS TableCatalogName\n,COLUMNS.[TABLE_SCHEMA] AS SchemaName\n,COLUMNS.[TABLE_NAME] AS TableName\n,COLUMNS.[COLUMN_NAME] AS ColumnName\n,COLUMNS.[ORDINAL_POSITION] AS OrdinalPositionNumber\n,COLUMNS.[DATA_TYPE] AS DataTypeName\n,COLUMNS.[CHARACTER_MAXIMUM_LENGTH] AS MaximumLenghtNumber \n,CAST(COLUMNS.[NUMERIC_PRECISION] AS INT) AS NumericPrecisionNumber \n,COLUMNS.[NUMERIC_SCALE] AS NumericScaleNumber \n,KEY_COLUMN_USAGE.ORDINAL_POSITION AS KeySequenceNumber \n,@{item().SourceObjectID} AS SourceObjectID\nFROM \n\tINFORMATION_SCHEMA.COLUMNS\nLEFT JOIN\n\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS\n\t\tON\n\t\t\tTABLE_CONSTRAINTS.TABLE_CATALOG = COLUMNS.TABLE_CATALOG\n\t\tAND\tTABLE_CONSTRAINTS.TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA\n\t\tAND TABLE_CONSTRAINTS.TABLE_NAME = COLUMNS.TABLE_NAME\n\t\tAND TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'PRIMARY KEY'\nLEFT JOIN \n\tINFORMATION_SCHEMA.KEY_COLUMN_USAGE\nON\t\n\tKEY_COLUMN_USAGE.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME\n\tAND KEY_COLUMN_USAGE.COLUMN_NAME = COLUMNS.COLUMN_NAME\nWHERE \n\tCOLUMNS.TABLE_SCHEMA = '@{item().SourceSchemaName}'\n\tAND COLUMNS.TABLE_NAME = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "Cubus31_PCTI_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_Cubus_MasterData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceCubusMasterData",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceSchemaName]\n ,[SourceObjectName]\n,[SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n  WHERE SourceConnectionName = 'Cubus_MasterData'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT \n'AzureSqlDatabase' AS SourceSystemTypeName\t\n,COLUMNS.[TABLE_CATALOG] AS TableCatalogName\n,COLUMNS.[TABLE_SCHEMA] AS SchemaName\n,COLUMNS.[TABLE_NAME] AS TableName\n,COLUMNS.[COLUMN_NAME] AS ColumnName\n,COLUMNS.[ORDINAL_POSITION] AS OrdinalPositionNumber\n,COLUMNS.[DATA_TYPE] AS DataTypeName\n,COLUMNS.[CHARACTER_MAXIMUM_LENGTH] AS MaximumLenghtNumber \n,CAST(COLUMNS.[NUMERIC_PRECISION] AS INT) AS NumericPrecisionNumber \n,COLUMNS.[NUMERIC_SCALE] AS NumericScaleNumber \n,KEY_COLUMN_USAGE.ORDINAL_POSITION AS KeySequenceNumber \n,@{item().SourceObjectID} AS SourceObjectID\nFROM \n\tINFORMATION_SCHEMA.COLUMNS\nLEFT JOIN\n\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS\n\t\tON\n\t\t\tTABLE_CONSTRAINTS.TABLE_CATALOG = COLUMNS.TABLE_CATALOG\n\t\tAND\tTABLE_CONSTRAINTS.TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA\n\t\tAND TABLE_CONSTRAINTS.TABLE_NAME = COLUMNS.TABLE_NAME\n\t\tAND TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'PRIMARY KEY'\nLEFT JOIN \n\tINFORMATION_SCHEMA.KEY_COLUMN_USAGE\nON\t\n\tKEY_COLUMN_USAGE.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME\n\tAND KEY_COLUMN_USAGE.COLUMN_NAME = COLUMNS.COLUMN_NAME\nWHERE \n\tCOLUMNS.TABLE_SCHEMA = '@{item().SourceSchemaName}'\n\tAND COLUMNS.TABLE_NAME = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "Cubus_MasterData_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_BIZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlBIZ",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_BIZ' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_Columbus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlColumbus",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceObjectID]\n,NUUDLJobCode\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_Columbus'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT\n[SourceSystemTypeName]\n,[TableCatalogName]\n,SchemaName\n,URI AS [TableName]\n,[ColumnName]\n,[OrdinalPositionNumber]\n,[DataTypeName]\n,[MaximumLenghtNumber]\n,[NumericPrecisionNumber]\n,[NumericScaleNumber]\n,[KeySequenceNumber]\n,'@{item().SourceObjectID}' AS SourceObjectID\nFROM [nuudataload].[v_Schema]\nWHERE NUUDLJobCode = '@{item().NUUDLJobCode}'\n",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ingestsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_Dawn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlDawn",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_Dawn' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}