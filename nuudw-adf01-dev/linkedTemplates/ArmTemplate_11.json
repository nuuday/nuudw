{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nuudw-adf01-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlprodofferingpricespecification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodofferingpricespecification"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlprodofferingpricespecification"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlprodofferingpricespecification",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`external_id` \r\n,`id` \r\n,`name` \r\n,`price_type` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`localized_name_json_dan` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.netcracker.`pimnrmlprodofferingpricespecification`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlprodofferingpricespecification]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlprodofferingpricespecification"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlprodofferingpricespecification]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlprodofferingpricespecification",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlprodofferingpricespecification",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductcatalog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductcatalog",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductcatalog"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductcatalog"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductcatalog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`localized_name_json_dan` \r\n,`id` \r\n,`name` \r\n,`external_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlproductcatalog`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductcatalog]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductcatalog"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductcatalog]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductcatalog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductcatalog",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductcatalog",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductfamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductfamily",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductfamily"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductfamily"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductfamily",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`localized_name_json_dan` \r\n,`id` \r\n,`name` \r\n,`external_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlproductfamily`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductfamily]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductfamily"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductfamily]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductfamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductfamily",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductfamily",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductoffering')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductoffering",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductoffering"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductoffering"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductoffering",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`available_from` \r\n,`available_to` \r\n,`localized_name_json_dan` \r\n,`id` \r\n,`is_active` \r\n,`name` \r\n,`product_family_id` \r\n,`product_offering_charging_type` \r\n,`sku_id` \r\n,`tags_json__corrupt_record` \r\n,`weight` \r\n,`external_id` \r\n,`extended_parameters_json_termsConditionsType` \r\n,`extended_parameters_json_offeringBusinessUse` \r\n,`extended_parameters_json__corrupt_record` \r\n,`extended_parameters_json_mobileAddOnType` \r\n,`extended_parameters_json_deviceType` \r\n,`extended_parameters_json_offeringBusinessType` \r\n,`extended_parameters_json_migrationId` \r\n,`extended_parameters_json_NumberInWarehouse` \r\n,`extended_parameters_json_phoneNumberOfferingType` \r\n,`extended_parameters_json_noInWarehouse` \r\n,`extended_parameters_json_simOfferingType` \r\n,`tangible_product_id` \r\n,`included_distribution_channels_json__corrupt_record` \r\n--,`included_brand_json__corrupt_record` \r\n,`included_markets_json__corrupt_record` \r\n,`included_customer_categories_json__corrupt_record` \r\n,`excluded_markets` \r\n,`excluded_customer_categories` \r\n,`excluded_distribution_channels` \r\n,`product_specification_id` \r\n,`cdc_revision_id` \r\n,`is_current` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n--,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`pimnrmlproductoffering`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductoffering]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductoffering"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductoffering]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductoffering",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductoffering",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductoffering",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductofferingpricechargeitem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargeitem"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargeitem"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductofferingpricechargeitem",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`amount` \r\n,`applied_from` \r\n,`applied_to` \r\n,`down_payment_amount` \r\n,`id` \r\n,`is_overridable` \r\n,`price_key_id` \r\n,`cdc_revision_id` \r\n,`context_top_offering_ids_json__corrupt_record` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlproductofferingpricechargeitem`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductofferingpricechargeitem]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductofferingpricechargeitem"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductofferingpricechargeitem]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductofferingpricechargeitem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductofferingpricechargeitem",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlproductofferingpricechargekey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargekey"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlproductofferingpricechargekey"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlproductofferingpricechargekey",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`available_from` \r\n,`available_to` \r\n,`currency_id` \r\n,`localized_name` \r\n,`id` \r\n,`is_base` \r\n,`is_default` \r\n,`name` \r\n,`price_list_id` \r\n,`prod_offering_price_spec_id` \r\n,`alternate_price_key_id` \r\n,`external_id` \r\n,`prod_offering_id` \r\n,`tangible_product_sale_type_id` \r\n,`installment_plan_id` \r\n,`price_eligibility_condition_id` \r\n,`cdc_revision_id` \r\n,`prod_offering_price_policy_condition_ids_json__corrupt_record` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlproductofferingpricechargekey`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlproductofferingpricechargekey]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlproductofferingpricechargekey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlproductofferingpricechargekey]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlproductofferingpricechargekey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlproductofferingpricechargekey",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_pimnrmlpromotionprodofferingpricealteration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlpromotionprodofferingpricealteration"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pimnrmlpromotionprodofferingpricealteration"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pimnrmlpromotionprodofferingpricealteration",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`amount` \r\n,`amount_percentage` \r\n,`currency_id` \r\n,`id` \r\n,`name` \r\n,`prod_offering_price_specification_id` \r\n,`extended_parameters` \r\n,`cdc_revision_id` \r\n,`localized_name_json_dan` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.@{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`pimnrmlpromotionprodofferingpricealteration`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[pimnrmlpromotionprodofferingpricealteration]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.pimnrmlpromotionprodofferingpricealteration"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[pimnrmlpromotionprodofferingpricealteration]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pimnrmlpromotionprodofferingpricealteration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"LoadIsIncremental": {
									"value": {
										"value": "@pipeline().parameters.JobIsIncremental",
										"type": "Expression"
									},
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pimnrmlpromotionprodofferingpricealteration",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_qssnrmlquote')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "qssnrmlquote",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "qssnrmlquote"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "qssnrmlquote"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_qssnrmlquote",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "SELECT \r\n`approval_level` \r\n,`assign_to` \r\n,`brand_id` \r\n,`business_action` \r\n,`cancellation_reason` \r\n,`customer_category_id` \r\n,`customer_committed_date` \r\n,`customer_id` \r\n,`customer_requested_date` \r\n,`delivery_method` \r\n,`distribution_channel_id` \r\n,`expiration_date` \r\n,`extended_parameters_json_activityTime` \r\n,`extended_parameters_json_agreementId` \r\n,`extended_parameters_json_ApplicationGuid` \r\n,`extended_parameters_json_authDateTime` \r\n,`extended_parameters_json_autoPaymentFlag` \r\n,`extended_parameters_json_cardExpiryDate` \r\n,`extended_parameters_json_cardNumber` \r\n,`extended_parameters_json_cardType` \r\n,`extended_parameters_json_contactForAbandoned` \r\n,`extended_parameters_json_creditCheckDate` \r\n,`extended_parameters_json_creditCheckDetails` \r\n,`extended_parameters_json_creditCheckExpirationDate` \r\n,`extended_parameters_json_creditCheckRequired` \r\n,`extended_parameters_json_creditCheckStatus` \r\n,`extended_parameters_json_currentStockId` \r\n,`extended_parameters_json_customerAccountNumber` \r\n,`extended_parameters_json_customerFirstName` \r\n--,`extended_parameters_json_disruptionConsent` \r\n,`extended_parameters_json_documentLastDigits` \r\n,`extended_parameters_json_documentType` \r\n,`extended_parameters_json_extPaymentId` \r\n,`extended_parameters_json_flow_id` \r\n--,`extended_parameters_json_flowId` \r\n,`extended_parameters_json_formId` \r\n,`extended_parameters_json_hardReservationState` \r\n,`extended_parameters_json_infoId` \r\n,`extended_parameters_json_initialTotalLoanAmount` \r\n,`extended_parameters_json_isLoanAvailable` \r\n--,`extended_parameters_json_loanApplicationGuid` \r\n,`extended_parameters_json_loanApplicationId` \r\n,`extended_parameters_json_loanRequestNotAvailable` \r\n,`extended_parameters_json_loanRequestStatus` \r\n,`extended_parameters_json_loanTerm` \r\n,`extended_parameters_json_marketId` \r\n--,`extended_parameters_json_marketingConsent` \r\n,`extended_parameters_json_mobilePhoneNumber` \r\n--,`extended_parameters_json_mpNumber` \r\n,`extended_parameters_json_partnerId` \r\n--,`extended_parameters_json_PAYMENT_STATUS` \r\n,`extended_parameters_json_paymentProvider` \r\n,`extended_parameters_json_paymentSubscriptionId` \r\n,`extended_parameters_json_portalDeliveryIsConfirmed` \r\n--,`extended_parameters_json_portalExpressBankLoanApproved` \r\n,`extended_parameters_json_portalFinancingOptionsConfirmed` \r\n,`extended_parameters_json_portalPersonalInformationIsConfirmed` \r\n,`extended_parameters_json_portalQuoteReviewConfirmed` \r\n--,`extended_parameters_json_requestStatus` \r\n,`extended_parameters_json_reservationExpirationDate` \r\n,`extended_parameters_json_stockAddress` \r\n,`extended_parameters_json_stockName` \r\n,`external_id` \r\n,`id` \r\n,`initial_distribution_channel_id` \r\n,`name` \r\n,`new_msa` \r\n,`number` \r\n,`opportunity_id` \r\n,`override_mode` \r\n,`owner` \r\n,`price_list_id` \r\n,`quote_creation_date` \r\n,`revision` \r\n,`state` \r\n,`updated_when` \r\n,`version` \r\n,`is_deleted` \r\n,`last_modified_ts` \r\n,`is_current` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`qssnrmlquote`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[qssnrmlquote]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.qssnrmlquote"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[qssnrmlquote]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_qssnrmlquote",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.qssnrmlquote",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "qssnrmlquote",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_qssnrmlquoteitem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "qssnrmlquoteitem",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "qssnrmlquoteitem"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "qssnrmlquoteitem"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_qssnrmlquoteitem",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "SELECT \r\n`account_id` \r\n,`action` \r\n,`active_from` \r\n,`active_to` \r\n,`amount` \r\n,`approval_level` \r\n,`availability_check_result` \r\n,`business_action` \r\n,`business_group_id` \r\n,`business_group_name` \r\n,`contracted_date` \r\n,`creation_time` \r\n,`disconnection_reason` \r\n,`distribution_channel_id` \r\n,`extended_parameters_json_0000372d_163b_48c9_83a9_17d7a237a2c0` \r\n--,`extended_parameters_json_150338a0_0cf7_4428_b3fc_dbca99bd9343` \r\n,`extended_parameters_json_2262debf_d95a_4e8b_957a_a3908b7c5df9` \r\n,`extended_parameters_json_2ee0ab36_03de_4020_a9c8_0793209a7ac7` \r\n--,`extended_parameters_json_465526c0_80c5_4a06_89ed_3a3bd6957c83` \r\n,`extended_parameters_json_4a15af47_9eb0_4546_8c9c_bc75387fe74c` \r\n--,`extended_parameters_json_55ab2bdf_151f_4c38_937f_7b5d337e6756` \r\n,`extended_parameters_json_6409d551_fcfe_4dc2_a552_776e73bb3f69` \r\n--,`extended_parameters_json_7c4b0eb2_5c5a_40da_8e12_0a0718273e3b` \r\n,`extended_parameters_json_activationDateOnWorkingDay` \r\n,`extended_parameters_json_af199492_152e_459c_a32b_eef81eef0a71` \r\n,`extended_parameters_json_agreementId` \r\n,`extended_parameters_json_availabilityDate` \r\n--,`extended_parameters_json_d22ac111_fb6a_42ba_b1b3_23b32b923d73` \r\n,`extended_parameters_json_deactivationFee` \r\n,`extended_parameters_json_deviceReturnOperation` \r\n--,`extended_parameters_json_df9bf9ab_7965_4cf2_8c5d_32d8c2e97e93` \r\n--,`extended_parameters_json_e012d094_2cbf_46cc_82e5_a915f9751e09` \r\n,`extended_parameters_json_extPaymentId` \r\n,`extended_parameters_json_f025e2e4_041c_43e9_875b_21309590e15c` \r\n,`extended_parameters_json_feePerDay` \r\n--,`extended_parameters_json_ff18f216_93ee_486d_86eb_b0d8396ce420` \r\n,`extended_parameters_json_isInsuranceAdded` \r\n,`extended_parameters_json_isPoaSigned` \r\n,`extended_parameters_json_noInWarehouse` \r\n,`extended_parameters_json_offeringBusinessUse` \r\n,`extended_parameters_json_paymentProvider` \r\n,`extended_parameters_json_portalActivationDateIsNotProvided` \r\n--,`extended_parameters_json_portalEndOfTheNoticePeriodOptionSelected` \r\n,`extended_parameters_json_portalRefuseUsageSpendLimit` \r\n,`extended_parameters_json_portInTermsAccepted` \r\n,`extended_parameters_json_preOrder` \r\n,`extended_parameters_json_returnMethod` \r\n,`extended_parameters_json_softReservationState` \r\n--,`extended_parameters_json_undefined` \r\n,`extended_parameters_json_userEmail` \r\n,`extended_parameters_json_userName` \r\n,`extended_parameters_json_userPhone` \r\n,`geo_site_id` \r\n,`id` \r\n,`market_id` \r\n,`marketing_bundle_id` \r\n,`number_of_installments` \r\n,`parent_quote_item_id` \r\n,`planned_disconnection_date` \r\n,`product_instance_id` \r\n,`product_offering_id` \r\n,`product_specification_id` \r\n,`product_specification_version` \r\n,`quantity` \r\n,`quote_id` \r\n,`root_quote_item_id` \r\n,`state` \r\n,`quote_version` \r\n,`is_deleted` \r\n,`last_modified_ts` \r\n,`is_current` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`qssnrmlquoteitem`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[qssnrmlquoteitem]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.qssnrmlquoteitem"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[qssnrmlquoteitem]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_qssnrmlquoteitem",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.qssnrmlquoteitem",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "qssnrmlquoteitem",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_riphonenumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "riphonenumber",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "riphonenumber"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "riphonenumber"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_riphonenumber",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`phone_number` \r\n,`description` \r\n,`status` \r\n,`category` \r\n,`perform_auto_categorization` \r\n,`serving_switch_id` \r\n,`top_range_id` \r\n,`subrange_id` \r\n--,`customer_account_id` \r\n,`ported_in` \r\n,`ported_out` \r\n,`extended_parameters_json__corrupt_record` \r\n,`aging_period_end_date` \r\n,`status_change_date` \r\n,`first_owner_id` \r\n,`ported_in_from` \r\n,`ported_out_to` \r\n,`country_code` \r\n,`area_code` \r\n,`national_prefix` \r\n,`is_deleted` \r\n,`last_modified_ts` \r\n,`is_current` \r\n,`extended_parameters_json_brand_id` \r\n,`extended_parameters_json_sp_id` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcracker.`riphonenumber`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[riphonenumber]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.riphonenumber"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[riphonenumber]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_riphonenumber",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.riphonenumber",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "riphonenumber",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Nuudl_NetCracker_worklogitems')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "worklogitems",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "worklogitems"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "Nuudl_NetCracker"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "netcracker"
									},
									"SourceTableName": {
										"type": "String",
										"value": "worklogitems"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_worklogitems",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\nSELECT \n`id` \n,`name` \n,`description` \n,`date` \n,`source` \n,`ref_id` \n,`ref_type` \n,`source_state` \n,`target_state` \n--,`attributes` \n,`is_deleted` \n,`last_modified_ts` \n,`is_current` \n,`changedby_json_m2m` \n,`changedby_json_service` \n,`changedby_json_userId` \n,`changedby_json_userName` \n,`NUUDL_ValidFrom` \n,`NUUDL_ValidTo` \n,`NUUDL_IsCurrent` \n,`NUUDL_ID` \n,`NUUDL_StandardizedProcessedTimestamp` \n,`NUUDL_CuratedBatchID` \n,`NUUDL_CuratedProcessedTimestamp` \n--,`NUUDL_CuratedSourceFilename` \n \nFROM dai.netcracker.`worklogitems`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[worklogitems]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "Nuudl_NetCracker_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.netcracker.worklogitems"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlNetCracker].[worklogitems]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_worklogitems",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlNetCracker.worklogitems",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Nuudl_NetCracker",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "netcracker",
									"type": "String"
								},
								"SourceTableName": {
									"value": "worklogitems",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_Cubus31_PCTI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceCubus31PCTI",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceSchemaName]\n ,[SourceObjectName]\n,[SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n  WHERE SourceConnectionName = 'Cubus31_PCTI'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT \n'AzureSqlDatabase' AS SourceSystemTypeName\t\n,COLUMNS.[TABLE_CATALOG] AS TableCatalogName\n,COLUMNS.[TABLE_SCHEMA] AS SchemaName\n,COLUMNS.[TABLE_NAME] AS TableName\n,COLUMNS.[COLUMN_NAME] AS ColumnName\n,COLUMNS.[ORDINAL_POSITION] AS OrdinalPositionNumber\n,COLUMNS.[DATA_TYPE] AS DataTypeName\n,COLUMNS.[CHARACTER_MAXIMUM_LENGTH] AS MaximumLenghtNumber \n,CAST(COLUMNS.[NUMERIC_PRECISION] AS INT) AS NumericPrecisionNumber \n,COLUMNS.[NUMERIC_SCALE] AS NumericScaleNumber \n,KEY_COLUMN_USAGE.ORDINAL_POSITION AS KeySequenceNumber \n,@{item().SourceObjectID} AS SourceObjectID\nFROM \n\tINFORMATION_SCHEMA.COLUMNS\nLEFT JOIN\n\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS\n\t\tON\n\t\t\tTABLE_CONSTRAINTS.TABLE_CATALOG = COLUMNS.TABLE_CATALOG\n\t\tAND\tTABLE_CONSTRAINTS.TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA\n\t\tAND TABLE_CONSTRAINTS.TABLE_NAME = COLUMNS.TABLE_NAME\n\t\tAND TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'PRIMARY KEY'\nLEFT JOIN \n\tINFORMATION_SCHEMA.KEY_COLUMN_USAGE\nON\t\n\tKEY_COLUMN_USAGE.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME\n\tAND KEY_COLUMN_USAGE.COLUMN_NAME = COLUMNS.COLUMN_NAME\nWHERE \n\tCOLUMNS.TABLE_SCHEMA = '@{item().SourceSchemaName}'\n\tAND COLUMNS.TABLE_NAME = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "Cubus31_PCTI_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_Cubus_MasterData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceCubusMasterData",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceSchemaName]\n ,[SourceObjectName]\n,[SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n  WHERE SourceConnectionName = 'Cubus_MasterData'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT \n'AzureSqlDatabase' AS SourceSystemTypeName\t\n,COLUMNS.[TABLE_CATALOG] AS TableCatalogName\n,COLUMNS.[TABLE_SCHEMA] AS SchemaName\n,COLUMNS.[TABLE_NAME] AS TableName\n,COLUMNS.[COLUMN_NAME] AS ColumnName\n,COLUMNS.[ORDINAL_POSITION] AS OrdinalPositionNumber\n,COLUMNS.[DATA_TYPE] AS DataTypeName\n,COLUMNS.[CHARACTER_MAXIMUM_LENGTH] AS MaximumLenghtNumber \n,CAST(COLUMNS.[NUMERIC_PRECISION] AS INT) AS NumericPrecisionNumber \n,COLUMNS.[NUMERIC_SCALE] AS NumericScaleNumber \n,KEY_COLUMN_USAGE.ORDINAL_POSITION AS KeySequenceNumber \n,@{item().SourceObjectID} AS SourceObjectID\nFROM \n\tINFORMATION_SCHEMA.COLUMNS\nLEFT JOIN\n\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS\n\t\tON\n\t\t\tTABLE_CONSTRAINTS.TABLE_CATALOG = COLUMNS.TABLE_CATALOG\n\t\tAND\tTABLE_CONSTRAINTS.TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA\n\t\tAND TABLE_CONSTRAINTS.TABLE_NAME = COLUMNS.TABLE_NAME\n\t\tAND TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'PRIMARY KEY'\nLEFT JOIN \n\tINFORMATION_SCHEMA.KEY_COLUMN_USAGE\nON\t\n\tKEY_COLUMN_USAGE.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME\n\tAND KEY_COLUMN_USAGE.COLUMN_NAME = COLUMNS.COLUMN_NAME\nWHERE \n\tCOLUMNS.TABLE_SCHEMA = '@{item().SourceSchemaName}'\n\tAND COLUMNS.TABLE_NAME = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "Cubus_MasterData_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_BIZ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlBIZ",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_BIZ' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_Columbus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlColumbus",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceObjectID]\n,NUUDLJobCode\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_Columbus'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT\n[SourceSystemTypeName]\n,[TableCatalogName]\n,SchemaName\n,URI AS [TableName]\n,[ColumnName]\n,[OrdinalPositionNumber]\n,[DataTypeName]\n,[MaximumLenghtNumber]\n,[NumericPrecisionNumber]\n,[NumericScaleNumber]\n,[KeySequenceNumber]\n,'@{item().SourceObjectID}' AS SourceObjectID\nFROM [nuudataload].[v_Schema]\nWHERE NUUDLJobCode = '@{item().NUUDLJobCode}'\n",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ingestsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_Dawn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlDawn",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_Dawn' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_Linkit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceNuudlLinkit",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceObjectID]\n,NUUDLJobCode\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_Linkit'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT\n[SourceSystemTypeName]\n,[TableCatalogName]\n,SchemaName\n,URI AS [TableName]\n,[ColumnName]\n,[OrdinalPositionNumber]\n,[DataTypeName]\n,[MaximumLenghtNumber]\n,[NumericPrecisionNumber]\n,[NumericScaleNumber]\n,[KeySequenceNumber]\n,'@{item().SourceObjectID}' AS SourceObjectID\nFROM [nuudataload].[v_Schema]\nWHERE NUUDLJobCode = '@{item().NUUDLJobCode}'\n",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ingestsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuData_Chipper')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuuDataChipper",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT [SourceSchemaName]\n ,[SourceObjectName]\n,[SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n  WHERE SourceConnectionName = 'NuuData_Chipper'",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlSource",
											"sqlReaderQuery": {
												"value": "SELECT DISTINCT \n'AzureSqlDatabase' AS SourceSystemTypeName\t\n,COLUMNS.[TABLE_CATALOG] AS TableCatalogName\n,COLUMNS.[TABLE_SCHEMA] AS SchemaName\n,COLUMNS.[TABLE_NAME] AS TableName\n,COLUMNS.[COLUMN_NAME] AS ColumnName\n,COLUMNS.[ORDINAL_POSITION] AS OrdinalPositionNumber\n,COLUMNS.[DATA_TYPE] AS DataTypeName\n,COLUMNS.[CHARACTER_MAXIMUM_LENGTH] AS MaximumLenghtNumber \n,CAST(COLUMNS.[NUMERIC_PRECISION] AS INT) AS NumericPrecisionNumber \n,COLUMNS.[NUMERIC_SCALE] AS NumericScaleNumber \n,KEY_COLUMN_USAGE.ORDINAL_POSITION AS KeySequenceNumber \n,@{item().SourceObjectID} AS SourceObjectID\nFROM \n\tINFORMATION_SCHEMA.COLUMNS\nLEFT JOIN\n\tINFORMATION_SCHEMA.TABLE_CONSTRAINTS\n\t\tON\n\t\t\tTABLE_CONSTRAINTS.TABLE_CATALOG = COLUMNS.TABLE_CATALOG\n\t\tAND\tTABLE_CONSTRAINTS.TABLE_SCHEMA = COLUMNS.TABLE_SCHEMA\n\t\tAND TABLE_CONSTRAINTS.TABLE_NAME = COLUMNS.TABLE_NAME\n\t\tAND TABLE_CONSTRAINTS.CONSTRAINT_TYPE = 'PRIMARY KEY'\nLEFT JOIN \n\tINFORMATION_SCHEMA.KEY_COLUMN_USAGE\nON\t\n\tKEY_COLUMN_USAGE.CONSTRAINT_NAME = TABLE_CONSTRAINTS.CONSTRAINT_NAME\n\tAND KEY_COLUMN_USAGE.COLUMN_NAME = COLUMNS.COLUMN_NAME\nWHERE \n\tCOLUMNS.TABLE_SCHEMA = '@{item().SourceSchemaName}'\n\tAND COLUMNS.TABLE_NAME = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "NuuData_Chipper_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_NuuDL_NAM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "SourceNuudlNAM",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'NuuDL_NAM' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_Schema_Nuudl_NetCracker')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Maintain Extract Create Schemas",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[MaintainExtractCreateSchemas]",
							"storedProcedureParameters": {
								"ExtractSchemaName": {
									"value": "sourceNuudlNetCracker",
									"type": "String"
								},
								"PrintSQL": {
									"value": "false",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LKP Objects",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SP Maintain Extract Create Schemas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": "SELECT \n    SourceCatalogName,\n    SourceSchemaName,\n    SourceObjectName,  \n    [SourceObjectID]\n FROM [nuuMetaView].[SourceObjectDefinitions]\n WHERE SourceConnectionName = 'Nuudl_NetCracker' AND LockObject = 0",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMetaView.SourceObjectDefinitions"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Object",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKP Objects",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKP Objects').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Information Schema",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": {
												"value": "SELECT\n    'AzureDatabricksDeltaLake' AS SourceSystemTypeName\n    , table_catalog AS TableCatalogName\n    , table_schema AS SchemaName\n    , table_name AS TableName\n    , column_name AS ColumnName\n    , ordinal_position AS OrdinalPositionNumber\n    , full_data_type AS DataTypeName\n    ,'@{item().SourceObjectID}' AS SourceObjectID\nFROM system.information_schema.columns\nWHERE table_catalog = '@{item().SourceCatalogName}'\n  AND table_schema = '@{item().SourceSchemaName}'\n  AND table_name = '@{item().SourceObjectName}'",
												"type": "Expression"
											},
											"exportSettings": {
												"type": "AzureDatabricksDeltaLakeExportCommand"
											}
										},
										"sink": {
											"type": "SqlSink",
											"writeBatchSize": 10000,
											"preCopyScript": {
												"value": "DELETE FROM nuuMeta.SourceInformationSchema WHERE SourceObjectID = '@{item().SourceObjectID}'",
												"type": "Expression"
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "datalakest01exploration",
												"type": "LinkedServiceReference"
											},
											"path": "adfstage"
										}
									},
									"inputs": [
										{
											"referenceName": "NuuDL_UnityCatalog_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "INFORMATION_SCHEMA.COLUMNS"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "nuudwsqldb01_DynamicDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "nuuMeta.SourceInformationSchema"
											}
										}
									]
								},
								{
									"name": "SP Maintain Extract",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Information Schema",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[nuuMeta].[MaintainExtract]",
										"storedProcedureParameters": {
											"SourceObjectID": {
												"value": {
													"value": "@{item().SourceObjectID}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"CreateTable": {
												"value": {
													"value": "@pipeline().parameters.CreateTable",
													"type": "Expression"
												},
												"type": "Boolean"
											},
											"UpdateSourceScript": {
												"value": {
													"value": "@pipeline().parameters.UpdateSourceScript",
													"type": "Expression"
												},
												"type": "Boolean"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "nuudwsqldb01",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CreateTable": {
						"type": "bool",
						"defaultValue": true
					},
					"UpdateSourceScript": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"variables": {
					"SchemaName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "0.9_Meta"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}