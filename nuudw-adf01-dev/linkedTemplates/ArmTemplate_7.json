{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nuudw-adf01-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_Technology')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_Technology_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_Technology_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_HouseHold')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_HouseHold_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_HouseHold_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Legacy_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Customer_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Customer_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Legacy_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Employee_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Employee_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Legacy_Product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Product_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Legacy_Product_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_OrderEvent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_OrderEvent_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_OrderEvent_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_PhoneDetail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_PhoneDetail_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_PhoneDetail_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Product')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Product_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Product_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Quote')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Quote_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Quote_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_SalesChannel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_SalesChannel_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_SalesChannel_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Subscription')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Subscription_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Subscription_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Technology')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Technology_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Technology_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Ticket')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Ticket_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Ticket_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_TransactionState')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_TransactionState_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_TransactionState_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Cubus31_PCTI_BUI_915_Customers_CU')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Cubus31_PCTI_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "CUBUS_READER.BUI_915_Customers_CU"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Cubus31_PCTI",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "CUBUS_READER",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "BUI_915_Customers_CU",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceCubus31PCTI",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_BUI_915_Customers_CU",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[LinkKundeID] \r\n,[CustomerNumber] \r\n,[AccountNumber] \r\n,[HouseholdID] \r\n,[Lid] \r\n,[Segment] \r\n,[PersonId] \r\n,[SystemKtnavn] \r\n,[ServiceProvCode] \r\n,[Product] \r\n,[Technology] \r\n,[CVRnr] \r\n,[OKunde] \r\n,[Objecttime] \r\n,[Kvhx] \r\n \r\nFROM CUBUS_READER.[BUI_915_Customers_CU]\r\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceCubus31PCTI].[BUI_915_Customers_CU]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Cubus31_PCTI_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "CUBUS_READER.BUI_915_Customers_CU"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceCubus31PCTI].[BUI_915_Customers_CU]"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_Cubus_MasterData_DimEmployee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_IsReady_flag",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 1 AS IsReady",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Cubus_MasterData_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Dimension.DimEmployee"
								}
							}
						}
					},
					{
						"name": "Evaluate_IsReady_flag",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Lookup_IsReady_flag').output.firstRow.IsReady,1)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "IsReady",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "The source was not ready at execution time. Try re-running the pipeline at a later time.",
										"errorCode": "0"
									}
								}
							]
						}
					},
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Evaluate_IsReady_flag",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "nuuMeta.[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "Cubus_MasterData",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "SqlServer",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "Dimension",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "DimEmployee",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceCubusMasterData",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy_DimEmployee",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderQuery": {
									"value": "\r\nSELECT \r\n[EmployeeKey] \r\n,[DW_ID_DimEmployeeWork] AS [SRC_DW_ID_DimEmployeeWork]\r\n,[DW_AuditKey] AS [SRC_DW_AuditKey]\r\n,[DW_Batch_Created_ID] AS [SRC_DW_Batch_Created_ID]\r\n,[DW_Batch_Updated_ID] AS [SRC_DW_Batch_Updated_ID]\r\n,[DW_CreateDate] AS [SRC_DW_CreateDate]\r\n,[DW_UpdateDate] AS [SRC_DW_UpdateDate]\r\n,[DW_Valid_From] AS [SRC_DW_Valid_From]\r\n,[DW_Valid_To] AS [SRC_DW_Valid_To]\r\n,[DW_EarlyArrived] AS [SRC_DW_EarlyArrived]\r\n,[DW_IsCurrent] AS [SRC_DW_IsCurrent]\r\n,[DW_IsDeleted] AS [SRC_DW_IsDeleted]\r\n,[DW_CRC] AS [SRC_DW_CRC]\r\n,[Source_Updated_TS] \r\n,[Source_Created_TS] \r\n,[Source_Updated_By] \r\n,[Source_Created_By] \r\n,[EmployeeID] \r\n,[EmployeeRecord] \r\n,[SourceSystem] \r\n,[JobIndicator] \r\n,[EmployeeStatus] \r\n,[Sex] \r\n,[BirthDate] \r\n,[FirstName] \r\n,[LastName] \r\n,[Name] \r\n,[LocalPhone] \r\n,[MobilePhone] \r\n,[FAX] \r\n,[WorkplacePhone] \r\n,[AlternativePhone] \r\n,[RoomNumber] \r\n,[PostalRoomNumber] \r\n,[Email] \r\n,[UserID] \r\n,[SeniorityDate] \r\n,[AnniversaryDate] \r\n,[StandardHours] \r\n,[OriginalHireDate] \r\n,[LatestHireDate] \r\n,[TerminationDate] \r\n,[LocationID] \r\n,[WorkAddress] \r\n,[WorkZipCode] \r\n,[WorkPostalDistrict] \r\n,[BusinessTitleCode] \r\n,[BusinessTitle] \r\n,[BusinessTitleShort] \r\n,[BusinessStatisticsCode] \r\n,[BusinessFunction] \r\n,[JobStatus] \r\n,[JobCode] \r\n,[JobCodeDescription] \r\n,[EmployeeClass] \r\n,[SalaryAdminPlan] \r\n,[SalaryGrade] \r\n,[PayGroup] \r\n,[SalaryType] \r\n,[EmployeeType] \r\n,[DepartmentID] \r\n,[DepartmentDescription] \r\n,[DepartmentDescriptionShort] \r\n,[ManagerEmployeeID] \r\n,[AONR] \r\n,[Company] \r\n,[CompanyDescription] \r\n,[CompanyDescriptionShort] \r\n,[EmployeeTypeCode] \r\n,[TerminationInfo] \r\n,[EmployeeStatusDescription] \r\n,[SexDescription] \r\n,[SkillGroup] \r\n,[IsManager] \r\n,[SquadID] \r\n,[SquadDescription] \r\n,[SquadDescriptionShort] \r\n,[IsAgileCoach] \r\n,[IsProductOwner] \r\n,[ApprovedEmailDomain] \r\n,[ChapterAreaID] \r\n,[ChapterAreaDescription] \r\n,[ChapterAreaDescriptionShort] \r\n \r\nFROM Dimension.[DimEmployee]\r\n",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceCubusMasterData].[DimEmployee]"
							},
							"enableStaging": false,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "Cubus_MasterData_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "Dimension.DimEmployee"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceCubusMasterData].[DimEmployee]"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuDL_BIZ_dimproduct')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "biz",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "dimproduct",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlBIZ",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "biz"
									},
									"SourceTableName": {
										"type": "String",
										"value": "dimproduct"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "biz"
									},
									"SourceTableName": {
										"type": "String",
										"value": "dimproduct"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_dimproduct",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`NUUDL_SourceCreated` \r\n,`NUUDL_SourceUpdated` \r\n,`ProductKey` \r\n,`DimEditor_Updated_TS` \r\n,`DimEditor_Created_TS` \r\n,`DimEditor_Created_By` \r\n,`ProductID` \r\n,`SourceSystem` \r\n,`Downstream` \r\n,`ETL_AntalLinier` \r\n,`ETL_FlowRelevant` \r\n,`ETL_ProduktInfo` \r\n,`ETL_ProduktKobling` \r\n,`ETL_TekstRelevant` \r\n,`IsWholesale` \r\n,`ProductBrandCategory` \r\n,`ProductCategory` \r\n,`ProductChange` \r\n,`ProductChangeCategory` \r\n,`ProductMainCategory` \r\n,`ProductName` \r\n,`ProductNetworkTechnology` \r\n,`ProductSubCategory` \r\n,`ProductTargetCustomer` \r\n,`ProductTransmissionTechnology` \r\n,`ProductType` \r\n,`SalesEffectiveDate` \r\n,`SalesExperiationDate` \r\n,`ServiceType` \r\n,`SourceCreatedDate` \r\n,`SourceEffectiveDate` \r\n,`SourceExpirationDate` \r\n,`SourceUpdatedBy` \r\n,`SourceUpdatedDate` \r\n,`Upstream` \r\n,`NUUDL_ID` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`BIZ_BatchCreatedID` \r\n,`BIZ_BatchUpdatedID` \r\n,`NUUDL_PKLatest` \r\n,`SAF_Attr` \r\n,`ETL_SAFFlowrelevant` \r\n,`ETL_SAFFlowrelevantDate` \r\n,`Niv1` \r\n,`Niv2` \r\n,`Niv3` \r\n,`Niv4` \r\n,`ProductSubCategory2` \r\n,`BellisPrioritet` \r\n,`Bemaerkning` \r\n,`CallDirectionFrom` \r\n,`CallDirectionTo` \r\n,`Landekode` \r\n,`Source_Created_By` \r\n,`Source_Updated_By` \r\n,`TrafficAddon` \r\n,`Volumetype` \r\n,`BundleType` \r\n,`Technology` \r\n,`ProductWeight` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM biz.`DimProduct`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlBIZ].[dimproduct]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "NuuDL_BIZ_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "biz.dimproduct"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlBIZ].[dimproduct]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_dimproduct",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlBIZ.dimproduct",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "biz",
									"type": "String"
								},
								"SourceTableName": {
									"value": "dimproduct",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuDL_BIZ_dimdimproduct')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "dim",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "dimdimproduct",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlBIZ",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "dim"
									},
									"SourceTableName": {
										"type": "String",
										"value": "dimdimproduct"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "dim"
									},
									"SourceTableName": {
										"type": "String",
										"value": "dimdimproduct"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_dimdimproduct",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "\r\nSELECT \r\n`NUUDL_SourceCreated` \r\n,`NUUDL_SourceUpdated` \r\n,`ProductKey` \r\n,`DimEditor_Updated_TS` \r\n,`DimEditor_Created_TS` \r\n,`DimEditor_Created_By` \r\n,`ProductID` \r\n,`SourceSystem` \r\n,`Downstream` \r\n,`ETL_AntalLinier` \r\n,`ETL_FlowRelevant` \r\n,`ETL_ProduktInfo` \r\n,`ETL_ProduktKobling` \r\n,`ETL_TekstRelevant` \r\n,`IsWholesale` \r\n,`ProductBrandCategory` \r\n,`ProductCategory` \r\n,`ProductChange` \r\n,`ProductChangeCategory` \r\n,`ProductMainCategory` \r\n,`ProductName` \r\n,`ProductNetworkTechnology` \r\n,`ProductSubCategory` \r\n,`ProductTargetCustomer` \r\n,`ProductTransmissionTechnology` \r\n,`ProductType` \r\n,`SalesEffectiveDate` \r\n,`SalesExperiationDate` \r\n,`ServiceType` \r\n,`SourceCreatedDate` \r\n,`SourceEffectiveDate` \r\n,`SourceExpirationDate` \r\n,`SourceUpdatedBy` \r\n,`SourceUpdatedDate` \r\n,`Upstream` \r\n,`NUUDL_ID` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`BIZ_BatchCreatedID` \r\n,`BIZ_BatchUpdatedID` \r\n,`NUUDL_PKLatest` \r\n,`SAF_Attr` \r\n,`ETL_SAFFlowrelevant` \r\n,`ETL_SAFFlowrelevantDate` \r\n,`Niv1` \r\n,`Niv2` \r\n,`Niv3` \r\n,`Niv4` \r\n,`ProductSubCategory2` \r\n,`BellisPrioritet` \r\n,`Bemaerkning` \r\n,`CallDirectionFrom` \r\n,`CallDirectionTo` \r\n,`Landekode` \r\n,`Source_Created_By` \r\n,`Source_Updated_By` \r\n,`TrafficAddon` \r\n,`Volumetype` \r\n,`BundleType` \r\n,`Technology` \r\n,`ProductWeight` \r\n,`NUUDL_BaseSourceFilename` \r\n,`NUUDL_BaseBatchID` \r\n,`NUUDL_BaseProcessedTimestamp` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.dim.`dimdimproduct`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlBIZ].[dimdimproduct]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "NuuDL_BIZ_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.dim.dimdimproduct"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlBIZ].[dimdimproduct]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_dimdimproduct",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlBIZ.dimdimproduct",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "dim",
									"type": "String"
								},
								"SourceTableName": {
									"value": "dimdimproduct",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuDL_BIZ_pdindividge')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "ref",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "pdindividge",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlBIZ",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "ref"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pdindividge"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_BIZ"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": "dai"
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "ref"
									},
									"SourceTableName": {
										"type": "String",
										"value": "pdindividge"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_pdindividge",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "SELECT \n`NUUDL_SourceCreated` \n,`NUUDL_SourceUpdated` \n--,`FIRMA` \n--,`ENHED` \n--,`VIRKNR` \n,`LOENNR` \n--,`LOEBENR` \n--,`STATUS` \n,`ANUMMER` \n,`EMAIL` \n--,`STEDNR` \n--,`AONR` \n,`KONTORFORK` \n--,`KONTORNAVN` \n--,`FYSADR` \n--,`POSTADR` \n--,`STIL_KODE` \n--,`INITIALER` \n,`NAVN` \n--,`FORNAVN` \n--,`MELLEMNAVN` \n--,`EFTERNAVN` \n--,`ADRESSE` \n--,`ADRLIN_1` \n--,`ADRLIN_2` \n--,`ADRLIN_3` \n--,`POSTNR` \n--,`KOEN` \n--,`ANS_DATO` \n--,`AFG_DATO` \n--,`FOD_DATO` \n--,`START_ORLOV` \n--,`SLUT_ORLOV` \n--,`OMRAADE` \n--,`TLFLOK` \n--,`TLFDIR` \n--,`TLFMOB` \n--,`TLFALT` \n--,`TLFFAX` \n--,`TLFOPS` \n--,`TLFUDL` \n--,`TJEGREN` \n--,`KATEGORI` \n--,`AFLFORM` \n--,`TILHOER` \n--,`ARBSTEDKD` \n--,`AENDRET` \n--,`OPDATERET` \n--,`NORMTID` \n--,`TRGRUPPE` \n--,`BANKREGNR` \n--,`BANKKONTONR` \n--,`FAGGRUPPE` \n,`NUUDL_ID` \n,`NUUDL_ValidFrom` \n,`NUUDL_ValidTo` \n,`NUUDL_IsCurrent` \n--,`BIZ_BatchCreatedID` \n--,`BIZ_BatchUpdatedID` \n,`NUUDL_PKLatest` \n,`NUUDL_BaseSourceFilename` \n,`NUUDL_BaseBatchID` \n,`NUUDL_BaseProcessedTimestamp` \n,`NUUDL_CuratedBatchID` \n,`NUUDL_CuratedProcessedTimestamp` \n \nFROM dai.ref.`pdindividge`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'\n\tAND NUUDL_ValidTo > '2023-01-01'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlBIZ].[pdindividge]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "NuuDL_BIZ_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "dai.ref.pdindividge"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlBIZ].[pdindividge]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_pdindividge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlBIZ.pdindividge",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_BIZ",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "dai",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "ref",
									"type": "String"
								},
								"SourceTableName": {
									"value": "pdindividge",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EXT_1_NuuDL_Columbus_AFTALE_LID')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Update_Meta_Tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[UpdateSourceTables]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_Columbus",
									"type": "String"
								},
								"SourceConnectionType": {
									"value": "AzureDatabricksDeltaLake",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "cu",
									"type": "String"
								},
								"SourceObjectName": {
									"value": "AFTALE_LID",
									"type": "String"
								},
								"DestinationSchemaName": {
									"value": "sourceNuudlColumbus",
									"type": "String"
								},
								"WatermarkColumnName": {
									"value": "NUUDL_CuratedBatchID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								},
								"WatermarkRollingWindowDays": {
									"value": "0",
									"type": "Int32"
								},
								"WatermarkInQuery": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup_Last_Value_Loaded",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update_Meta_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetLastValueLoaded]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_Columbus"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "cu"
									},
									"SourceTableName": {
										"type": "String",
										"value": "AFTALE_LID"
									},
									"JobIsIncremental": {
										"type": "Boolean",
										"value": {
											"value": "@pipeline().parameters.JobIsIncremental",
											"type": "Expression"
										}
									},
									"ConnectionType": {
										"type": "String",
										"value": "AzureDatabricksDeltaLake"
									},
									"WatermarkIsDate": {
										"type": "Boolean",
										"value": "False"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Lookup_Source_Schema_Name",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup_Last_Value_Loaded",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource",
								"sqlReaderStoredProcedureName": "[[nuuMeta].[GetSourceSchemaName]",
								"storedProcedureParameters": {
									"SourceConnectionName": {
										"type": "String",
										"value": "NuuDL_Columbus"
									},
									"SourceCatalogName": {
										"type": "String",
										"value": ""
									},
									"SourceSchemaName": {
										"type": "String",
										"value": "cu"
									},
									"SourceTableName": {
										"type": "String",
										"value": "AFTALE_LID"
									}
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "nuuMeta.SourceObjects"
								}
							}
						}
					},
					{
						"name": "Copy_AFTALE_LID",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_Source_Schema_Name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": {
									"value": "SELECT \r\n`NUUDL_SourceCreated` \r\n,`NUUDL_SourceUpdated` \r\n,`ABM_NR` \r\n,`ABONNEMENT_ID` \r\n,`AENDRINGSSTATUS` \r\n,`AFTALE_NR` \r\n,`BEM_TEKST` \r\n,`FAST_SPAERRING` \r\n,`FJERNTELEFON` \r\n,`FORBIND_ID` \r\n,`GEN_DUT` \r\n,`KUNDESAG_KD_AFS` \r\n,`KUNDESAG_KD_OPR` \r\n,`LID` \r\n,`LID_STATUS` \r\n,`MOMSFRI_MRK` \r\n,`NAVNE_NR` \r\n,`NBR_DUT` \r\n,`OP_SOEGEFELT` \r\n,`ORDRE_NR_AFS` \r\n,`ORDRE_NR_OPR` \r\n,`PRIS_SOEJLE` \r\n,`SIDST_OPD_INIT` \r\n,`SIDST_OPD_TSTMP` \r\n,`SLUT_DATO` \r\n,`START_DATO` \r\n,`TLF_BOG_OPT_KD` \r\n,`TRAFIK_OPSM_MRK` \r\n,`UDSTIL_LID_MRK` \r\n,`NUUDL_ID` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`BIZ_BatchCreatedID` \r\n,`BIZ_BatchUpdatedID` \r\n,`NUUDL_PKLatest` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM cu.`AFTALE_LID`\r\n WHERE NUUDL_ValidTo>='2017-01-01' AND NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
									"type": "Expression"
								},
								"exportSettings": {
									"type": "AzureDatabricksDeltaLakeExportCommand"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBatchSize": {
									"value": "@pipeline().parameters.WriteBatchSize",
									"type": "Expression"
								},
								"preCopyScript": "TRUNCATE TABLE [sourceNuudlColumbus].[AFTALE_LID]"
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "datalakest01exploration",
									"type": "LinkedServiceReference"
								},
								"path": "adfstage"
							}
						},
						"inputs": [
							{
								"referenceName": "NuuDL_Columbus_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": ".cu.AFTALE_LID"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "nuudwsqldb01_DynamicDataset",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "[[sourceNuudlColumbus].[AFTALE_LID]"
								}
							}
						]
					},
					{
						"name": "Merge_To_History",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy_AFTALE_LID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[LoadSourceObjectHistoryInherit]",
							"storedProcedureParameters": {
								"ExtractTable": {
									"value": "sourceNuudlColumbus.AFTALE_LID",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set_Last_Value_Loaded",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Merge_To_History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[nuuMeta].[SetLastLoadedValue]",
							"storedProcedureParameters": {
								"SourceConnectionName": {
									"value": "NuuDL_Columbus",
									"type": "String"
								},
								"SourceCatalogName": {
									"value": "",
									"type": "String"
								},
								"SourceSchemaName": {
									"value": "cu",
									"type": "String"
								},
								"SourceTableName": {
									"value": "AFTALE_LID",
									"type": "String"
								},
								"WatermarkIsDate": {
									"value": "False",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "nuudwsqldb01",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "Bool",
						"defaultValue": true
					},
					"WriteBatchSize": {
						"type": "Int",
						"defaultValue": 10000
					}
				},
				"folder": {
					"name": "0.1_Extracts"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}