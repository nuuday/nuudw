{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nuudw-adf01-dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/NuuData_Columbus_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NuuData_Columbus",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					},
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDL_NAM_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NuuDL_NAM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					},
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nuudl_NetCracker_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Nuudl_NetCracker",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					},
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestionNetcracker_interim_Avro_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake01ingestionNetcracker_interim",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystemName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"ColumnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"TextQualifier": {
						"type": "string",
						"defaultValue": "\""
					},
					"EscapeCharacter": {
						"type": "string",
						"defaultValue": "\\"
					},
					"IsHeaderPresent": {
						"type": "bool",
						"defaultValue": true
					},
					"CompressionCodec": {
						"type": "string",
						"defaultValue": "none"
					},
					"Encoding": {
						"type": "string",
						"defaultValue": "UTF-8"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "Avro",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystemName",
							"type": "Expression"
						}
					},
					"avroCompressionCodec": {
						"value": "@dataset().CompressionCodec",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestionNetcracker_interim_DelimitedText_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake01ingestionNetcracker_interim",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystemName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"ColumnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"TextQualifier": {
						"type": "string",
						"defaultValue": "\""
					},
					"EscapeCharacter": {
						"type": "string",
						"defaultValue": "\\"
					},
					"IsHeaderPresent": {
						"type": "bool",
						"defaultValue": true
					},
					"CompressionCodec": {
						"type": "string",
						"defaultValue": "none"
					},
					"Encoding": {
						"type": "string",
						"defaultValue": "UTF-8"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystemName",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().ColumnDelimiter",
						"type": "Expression"
					},
					"compressionCodec": {
						"value": "@dataset().CompressionCodec",
						"type": "Expression"
					},
					"encodingName": {
						"value": "@dataset().Encoding",
						"type": "Expression"
					},
					"escapeChar": {
						"value": "@dataset().EscapeCharacter",
						"type": "Expression"
					},
					"firstRowAsHeader": {
						"value": "@dataset().IsHeaderPresent",
						"type": "Expression"
					},
					"quoteChar": {
						"value": "@dataset().TextQualifier",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestionNetcracker_interim_Orc_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake01ingestionNetcracker_interim",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystemName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"ColumnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"TextQualifier": {
						"type": "string",
						"defaultValue": "\""
					},
					"EscapeCharacter": {
						"type": "string",
						"defaultValue": "\\"
					},
					"IsHeaderPresent": {
						"type": "bool",
						"defaultValue": true
					},
					"CompressionCodec": {
						"type": "string",
						"defaultValue": "none"
					},
					"Encoding": {
						"type": "string",
						"defaultValue": "UTF-8"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "Orc",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystemName",
							"type": "Expression"
						}
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestionNetcracker_interim_Parquet_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "datalake01ingestionNetcracker_interim",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileSystemName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FolderName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"FileName": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"ColumnDelimiter": {
						"type": "string",
						"defaultValue": ","
					},
					"TextQualifier": {
						"type": "string",
						"defaultValue": "\""
					},
					"EscapeCharacter": {
						"type": "string",
						"defaultValue": "\\"
					},
					"IsHeaderPresent": {
						"type": "bool",
						"defaultValue": true
					},
					"CompressionCodec": {
						"type": "string",
						"defaultValue": "none"
					},
					"Encoding": {
						"type": "string",
						"defaultValue": "UTF-8"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().FileSystemName",
							"type": "Expression"
						}
					},
					"compressionCodec": {
						"value": "@dataset().CompressionCodec",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ingestsqldb01_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ingestsqldb01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					},
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/nuudwsqldb01_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					},
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BRIDGE_0_UserAccess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BRIDGE_1_UserAccess_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BRIDGE_1_UserAccess_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.5_Bridge"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Address')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Address_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Address_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_BillingAccount')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_BillingAccount_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_BillingAccount_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Customer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Customer_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Customer_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Employee_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_Employee_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_ChipperIncident')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_ChipperIncident_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_ChipperIncident_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_ChipperStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_ChipperStatus_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_ChipperStatus_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_DatePeriods')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_DatePeriods_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_DatePeriods_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_Infrastructure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_Infrastructure_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_Infrastructure_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_OpenIncidentsGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_OpenIncidentsGroup_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_OpenIncidentsGroup_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_0_FAM_SalesChannel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transform",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_SalesChannel_Transform",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transform",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_1_FAM_SalesChannel_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"JobIsIncremental": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								},
								"CleanUpPartitions": {
									"value": "@pipeline().parameters.CleanUpPartitions",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"JobIsIncremental": {
						"type": "bool",
						"defaultValue": true
					},
					"CleanUpPartitions": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "0.3_Dimensions"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}