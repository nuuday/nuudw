{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "nuudw-adf01-dev"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://nuudw-kv01-dev.vault.azure.net/"
		},
		"NuuDW-OnPremiseIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/b05a2e18-2089-4864-80c8-7303371b246c/resourcegroups/sense-datafactory/providers/Microsoft.DataFactory/factories/SenseDF01/integrationruntimes/OnPrem-IntegrationRuntime-01"
		},
		"Cubus31_PCTI_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ConnectionString-Cubus-Cubus31-PCTI"
		},
		"Cubus_Masterdata_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ConnectionString-Cubus-Masterdata"
		},
		"NuuData_Chipper_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ConnectionString-nuudatasqldb01"
		},
		"NuuData_Columbus_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "ConnectionString-nuudatasqldb01"
		},
		"datalake01ingestion_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakest01ingestiondev.dfs.core.windows.net"
		},
		"datalake01ingestionNetcracker_interim_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakest01ingestiondev.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SSAS_Process')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start Processing",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get SSASServerName secret",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:40",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@concat('https://westeurope.asazure.windows.net/servers/',activity('Get SSASServerName secret').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes')",
								"type": "Expression"
							},
							"body": {
								"value": "@pipeline().parameters.RefreshCommand",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "Get Refreshes",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Start Processing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:01:40",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://westeurope.asazure.windows.net/servers/',activity('Get SSASServerName secret').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes')",
								"type": "Expression"
							},
							"body": {
								"value": "@pipeline().parameters.RefreshCommand",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://*.asazure.windows.net"
							}
						}
					},
					{
						"name": "Get Latest Refresh",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@json(activity('Get Refreshes').output.Response)",
								"type": "Expression"
							},
							"condition": {
								"value": "@greaterOrEquals(item().startTime,addseconds(activity('Start Processing').output.startTime,-30))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait for completion",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Get Latest Refresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(activity('Get Refresh Status').output.status,'inProgress'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait 15 seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 15
									}
								},
								{
									"name": "Get Refresh Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait 15 seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:01:40",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@concat('https://westeurope.asazure.windows.net/servers/',activity('Get SSASServerName secret').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes/',first(activity('Get Latest Refresh').output.Value).refreshId)",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://*.asazure.windows.net"
										}
									}
								}
							],
							"timeout": "0.01:00:00"
						}
					},
					{
						"name": "Throw if failed",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Wait for completion",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Refresh Status').output.status,'failed')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Throw",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.01:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": {
											"value": "localhost",
											"type": "Expression"
										},
										"body": {
											"value": "@activity('Get Refresh Status').output",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get SSASServerName secret",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/SSASServerName?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ModelName": {
						"type": "string"
					},
					"RefreshCommand": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Toolbox/Azure Analysis Services"
				},
				"annotations": [],
				"lastPublishTime": "2023-08-02T16:25:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSAS_Resume')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SSASServerName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/SSASServerName?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ResourceGroupName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/ADFResourceGroupName?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SubscriptionID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/ADFSubscriptionID?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Azure AS Status",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SSASServerName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ResourceGroupName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SubscriptionID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',activity('SubscriptionID').output.value,'/resourceGroups/',activity('ResourceGroupName').output.value,'/providers/Microsoft.AnalysisServices/servers/',activity('SSASServerName').output.value,'?api-version=2017-08-01')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set AAS Status Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Azure AS Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AASStatus",
							"value": {
								"value": "@activity('Get Azure AS Status').output.properties.state",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If AAS running",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set AAS Status Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('AASStatus'),'Paused')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Resume Azure AS",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.01:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',activity('SubscriptionID').output.value,'/resourceGroups/',activity('ResourceGroupName').output.value,'/providers/Microsoft.AnalysisServices/servers/',activity('SSASServerName').output.value,'/resume?api-version=2017-08-01')",
											"type": "Expression"
										},
										"body": {
											"dummy": "dummy"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"AASStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Toolbox/Azure Analysis Services"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SSAS_Suspend')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SSASServerName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/SSASServerName?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "ResourceGroupName",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/ADFResourceGroupName?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "SubscriptionID",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.07:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://',replace(pipeline().DataFactory,'adf','kv'),'.vault.azure.net/secrets/ADFSubscriptionID?api-version=7.0')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Get Azure AS Status",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SSASServerName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ResourceGroupName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SubscriptionID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',activity('SubscriptionID').output.value,'/resourceGroups/',activity('ResourceGroupName').output.value,'/providers/Microsoft.AnalysisServices/servers/',activity('SSASServerName').output.value,'?api-version=2017-08-01')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set AAS Status Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Azure AS Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AASStatus",
							"value": {
								"value": "@activity('Get Azure AS Status').output.properties.state",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If AAS running",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set AAS Status Variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('AASStatus'),'Succeeded')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Suspend Azure AS",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.01:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',activity('SubscriptionID').output.value,'/resourceGroups/',activity('ResourceGroupName').output.value,'/providers/Microsoft.AnalysisServices/servers/',activity('SSASServerName').output.value,'/suspend?api-version=2017-08-01')",
											"type": "Expression"
										},
										"body": {
											"dummy": "dummy"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"AASStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Toolbox/Azure Analysis Services"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nuudl_Columbus')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-5766851830059509.9.azuredatabricks.net",
					"clusterId": "0111-130909-iqv8kbwp",
					"workspaceResourceId": "/subscriptions/f1dd3e21-b687-4062-9de2-b55be2eed76f/resourceGroups/datalake-rg01-exploration-product/providers/Microsoft.Databricks/workspaces/datalake-dbw01-explor-product"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nuudl_Linkit')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-5766851830059509.9.azuredatabricks.net",
					"clusterId": "0111-130909-iqv8kbwp",
					"workspaceResourceId": "/subscriptions/f1dd3e21-b687-4062-9de2-b55be2eed76f/resourceGroups/datalake-rg01-exploration-product/providers/Microsoft.Databricks/workspaces/datalake-dbw01-explor-product"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDW-OnPremiseIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('NuuDW-OnPremiseIntegrationRuntime_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FAM_3_AS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FaultManagement",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SSAS_Process",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ModelName": "FaultManagement",
								"RefreshCommand": "{\"Type\":\"Full\",\"CommitMode\":\"transactional\",\"MaxParallelism\":10,\"RetryCount\":2}"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "0.0 Solutions/FAM_FaultManagement"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SSAS_Process')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDL_Columbus_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Nuudl_Columbus",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					},
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Nuudl_Columbus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDL_Linkit_DynamicDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Nuudl_Linkit",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DynamicDatasets"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"table": {
						"value": "@replace(replace(split(dataset().TableName,'.')[1],'[',''),']','')",
						"type": "Expression"
					},
					"schema": {
						"value": "@replace(replace(split(dataset().TableName,'.')[0],'[',''),']','')",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Nuudl_Linkit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cubus31_PCTI')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Created by milank@nuuday.dk 2023-06-22",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Cubus31_PCTI_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "NuuDW-OnPremiseIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/NuuDW-OnPremiseIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cubus_Masterdata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Created by milan@nuuday.dk 2023-06-22 ",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Cubus_Masterdata_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "NuuDW-OnPremiseIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/NuuDW-OnPremiseIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDL_NAM')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2929753254893719.19.azuredatabricks.net",
					"clusterId": "0905-134532-2jn7av69",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrickstoken"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuDL_UnityCatalog')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2929753254893719.19.azuredatabricks.net",
					"clusterId": "0905-134532-2jn7av69",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrickstoken"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuData_Chipper')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('NuuData_Chipper_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NuuData_Columbus')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('NuuData_Columbus_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nuudl_BIZ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2929753254893719.19.azuredatabricks.net",
					"clusterId": "0905-134532-2jn7av69",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrickstoken"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nuudl_NetCracker')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2929753254893719.19.azuredatabricks.net",
					"clusterId": "0905-134532-2jn7av69",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databrickstoken"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestion')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalake01ingestion_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "Variable-AccountKey-DataLake01Ingestion"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datalake01ingestionNetcracker_interim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('datalake01ingestionNetcracker_interim_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "Variable-AccountKey-DataLake01Ingestion"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
			]
		}
	]
}