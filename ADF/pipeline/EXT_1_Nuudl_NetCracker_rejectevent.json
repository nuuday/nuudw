{
  "name": "EXT_1_Nuudl_NetCracker_rejectevent",
  "properties": {
    "activities": [
      {
        "name": "Update_Meta_Tables",
        "type": "SqlServerStoredProcedure",
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceConnectionType": {
              "value": "AzureDatabricksDeltaLake",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "netcracker",
              "type": "String"
            },
            "SourceObjectName": {
              "value": "rejectevent",
              "type": "String"
            },
            "DestinationSchemaName": {
              "value": "sourceNuudlNetCracker",
              "type": "String"
            },
            "WatermarkColumnName": {
              "value": "NUUDL_CuratedBatchID",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            },
            "WatermarkRollingWindowDays": {
              "value": "0",
              "type": "Int32"
            },
            "WatermarkInQuery": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Lookup_Last_Value_Loaded",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Update_Meta_Tables",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "netcracker",
                "type": "String"
              },
              "SourceTableName": {
                "value": "rejectevent",
                "type": "String"
              },
              "JobIsIncremental": {
                "value": "@pipeline().parameters.JobIsIncremental",
                "type": "Boolean"
              },
              "ConnectionType": {
                "value": "AzureDatabricksDeltaLake",
                "type": "String"
              },
              "WatermarkIsDate": {
                "value": "False",
                "type": "Boolean"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Lookup_Source_Schema_Name",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Lookup_Last_Value_Loaded",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "netcracker",
                "type": "String"
              },
              "SourceTableName": {
                "value": "rejectevent",
                "type": "String"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Copy_rejectevent",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "Lookup_Source_Schema_Name",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "AzureDatabricksDeltaLakeSource",
            "query": {
              "value": "\r\nSELECT \r\n`event_record` \r\n,`reject_status` \r\n,`event_source` \r\n,`event_type_id` \r\n,`event_dtm` \r\n,`event_ref` \r\n,`reject_dtm` \r\n,`input_type` \r\n,`reject_code` \r\n,`reject_categorisation` \r\n,`rejected_count` \r\n,`filtered_boo` \r\n,`modified_boo` \r\n,`reprocess_status` \r\n,`random_hash` \r\n,`file_type_id` \r\n,`file_subtype` \r\n,`domain_id` \r\n,`event_cost_mny` \r\n,`input_attr_1` \r\n,`input_attr_2` \r\n,`input_attr_3` \r\n,`input_attr_4` \r\n,`input_attr_5` \r\n,`input_attr_6` \r\n,`input_attr_7` \r\n,`input_attr_8` \r\n,`input_attr_9` \r\n,`input_attr_10` \r\n,`input_attr_11` \r\n,`input_attr_12` \r\n,`input_attr_13` \r\n,`input_attr_14` \r\n,`input_attr_15` \r\n,`input_attr_16` \r\n,`input_attr_17` \r\n,`input_attr_18` \r\n,`input_attr_19` \r\n,`input_attr_20` \r\n,`input_attr_21` \r\n,`input_attr_22` \r\n,`input_attr_23` \r\n,`input_attr_24` \r\n,`partial_option` \r\n,`partial_stream_id` \r\n,`partial_seq` \r\n,`cost_centre_id` \r\n,`loyalty_points` \r\n,`imported_currency_code` \r\n,`competitor_cost_mny` \r\n,`internal_cost_mny` \r\n,`external_cost_mny` \r\n,`authorisation_code` \r\n,`origin_major` \r\n,`origin_minor` \r\n,`rating_tariff_id` \r\n,`reject_reason_data_1` \r\n,`reject_reason_data_2` \r\n,`reject_reason_data_3` \r\n,`reject_reason_data_4` \r\n,`reject_reason_data_5` \r\n,`reject_reason_data_6` \r\n,`reject_reason_data_7` \r\n,`reject_reason_data_8` \r\n,`reject_reason_data_9` \r\n,`reject_reason_data_10` \r\n,`reject_reason_data_type_1` \r\n,`reject_reason_data_type_2` \r\n,`reject_reason_data_type_3` \r\n,`reject_reason_data_type_4` \r\n,`reject_reason_data_type_5` \r\n,`reject_reason_data_type_6` \r\n,`reject_reason_data_type_7` \r\n,`reject_reason_data_type_8` \r\n,`reject_reason_data_type_9` \r\n,`reject_reason_data_type_10` \r\n,`tax_override_id` \r\n,`process_instance_id` \r\n,`previous_account_num` \r\n,`previous_event_ref` \r\n,`previous_event_seq` \r\n,`input_eea_1` \r\n,`input_eea_2` \r\n,`input_eea_3` \r\n,`input_eea_4` \r\n,`input_eea_5` \r\n,`input_eea_6` \r\n,`input_eea_7` \r\n,`input_eea_8` \r\n,`input_eea_9` \r\n,`input_eea_10` \r\n,`input_eea_11` \r\n,`input_eea_12` \r\n,`input_eea_13` \r\n,`input_eea_14` \r\n,`input_eea_15` \r\n,`input_eea_16` \r\n,`input_eea_17` \r\n,`input_eea_18` \r\n,`input_eea_19` \r\n,`input_eea_20` \r\n,`input_eea_21` \r\n,`input_eea_22` \r\n,`input_eea_23` \r\n,`input_eea_24` \r\n,`input_eea_25` \r\n,`input_eea_26` \r\n,`input_eea_27` \r\n,`input_eea_28` \r\n,`input_eea_29` \r\n,`input_eea_30` \r\n,`input_eea_31` \r\n,`input_eea_32` \r\n,`input_eea_33` \r\n,`input_eea_34` \r\n,`input_eea_35` \r\n,`input_eea_36` \r\n,`input_eea_37` \r\n,`input_eea_38` \r\n,`input_eea_39` \r\n,`input_eea_40` \r\n,`input_eea_41` \r\n,`input_eea_42` \r\n,`input_eea_43` \r\n,`input_eea_44` \r\n,`input_eea_45` \r\n,`input_eea_46` \r\n,`input_eea_47` \r\n,`input_eea_48` \r\n,`input_eea_49` \r\n,`input_eea_50` \r\n,`input_eea_51` \r\n,`input_eea_52` \r\n,`input_eea_53` \r\n,`input_eea_54` \r\n,`input_eea_55` \r\n,`input_eea_56` \r\n,`input_eea_57` \r\n,`input_eea_58` \r\n,`input_eea_59` \r\n,`input_eea_60` \r\n,`input_eea_61` \r\n,`input_eea_62` \r\n,`input_eea_63` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM @{activity('Lookup_Source_Schema_Name').output.firstRow.SourceSchemaName}.`rejectevent`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
              "type": "Expression"
            },
            "exportSettings": {
              "type": "AzureDatabricksDeltaLakeExportCommand"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": "@pipeline().parameters.WriteBatchSize",
            "preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[rejectevent]"
          },
          "enableStaging": true,
          "stagingSettings": {
            "linkedServiceName": {
              "referenceName": "datalakest01exploration",
              "type": "LinkedServiceReference"
            },
            "path": "adfstage"
          }
        },
        "inputs": [
          {
            "referenceName": "Nuudl_NetCracker_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "netcracker.rejectevent"
            }
          }
        ],
        "outputs": [
          {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "[sourceNuudlNetCracker].[rejectevent]"
            }
          }
        ]
      },
      {
        "name": "Merge_To_History",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Copy_rejectevent",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[LoadSourceObjectHistory]",
          "storedProcedureParameters": {
            "ExtractTable": {
              "value": "sourceNuudlNetCracker.rejectevent",
              "type": "String"
            },
            "LoadIsIncremental": {
              "value": "@pipeline().parameters.JobIsIncremental",
              "type": "Boolean"
            },
            "HistoryTrackingColumns": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Set_Last_Value_Loaded",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Merge_To_History",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "netcracker",
              "type": "String"
            },
            "SourceTableName": {
              "value": "rejectevent",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      "JobIsIncremental": {
        "type": "Bool",
        "defaultValue": "true",
        "identity": "JobIsIncremental"
      },
      "WriteBatchSize": {
        "type": "Int",
        "defaultValue": 10000,
        "identity": "WriteBatchSize"
      }
    },
    "folder": {
      "name": "0.1_Extracts"
    }
  }
}