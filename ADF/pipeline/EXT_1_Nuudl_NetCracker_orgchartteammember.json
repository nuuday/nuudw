{
	"name": "EXT_1_Nuudl_NetCracker_orgchartteammember",
	"properties": {
		"activities": [
			{
				"name": "Update_Meta_Tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceConnectionType": {
							"value": "AzureDatabricksDeltaLake",
							"type": "String"
						},
						"SourceCatalogName": {
							"value": "dai",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "netcracker",
							"type": "String"
						},
						"SourceObjectName": {
							"value": "orgchartteammember",
							"type": "String"
						},
						"DestinationSchemaName": {
							"value": "sourceNuudlNetCracker",
							"type": "String"
						},
						"WatermarkColumnName": {
							"value": "NUUDL_CuratedBatchID",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						},
						"WatermarkRollingWindowDays": {
							"value": "0",
							"type": "Int32"
						},
						"WatermarkInQuery": {
							"value": "",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup_Last_Value_Loaded",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update_Meta_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceCatalogName": {
								"type": "String",
								"value": "dai"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "netcracker"
							},
							"SourceTableName": {
								"type": "String",
								"value": "orgchartteammember"
							},
							"JobIsIncremental": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							},
							"ConnectionType": {
								"type": "String",
								"value": "AzureDatabricksDeltaLake"
							},
							"WatermarkIsDate": {
								"type": "Boolean",
								"value": "False"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Lookup_Source_Schema_Name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Lookup_Last_Value_Loaded",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceCatalogName": {
								"type": "String",
								"value": "dai"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "netcracker"
							},
							"SourceTableName": {
								"type": "String",
								"value": "orgchartteammember"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Copy_orgchartteammember",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_Source_Schema_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": {
							"value": "SELECT \n`approval_reason` \n,`closed_by_date` \n,`closed_by_user_id` \n,`closed_by_user_name` \n,`created_by_date` \n,`created_by_user_id` \n,`created_by_user_name` \n,LEFT(`description`,300) AS description\n,`first_resolution_date` \n,`is_solution_visible_for_contact` \n,`last_approved_by_date` \n,`last_approved_by_user_id` \n,`last_approved_by_user_name` \n,`last_updated_by_date` \n,`last_updated_by_user_id` \n,`last_updated_by_user_name` \n,`problem_start_date` \n,`resolution_reason` \n,`resolved_by_date` \n,`resolved_by_user_id` \n,`resolved_by_user_name` \n,LEFT(`solution`,300) solution\n,`ticket_category` \n,`version` \n,`channel_id` \n,`expected_resolution_date` \n,`external_id` \n,`priority` \n,`requested_resolution_date` \n,`severity` \n,`status` \n,`status_change_date` \n,`status_change_reason` \n,`ticket_type` \n,`id` \n,`name` \n,`group_assignee_id` \n,`group_assignee_name` \n,`user_assignee_id` \n,`user_assignee_name` \n,`reporter_id` \n,`reporter_name` \n,`project_id` \n,`project_name` \n,`group_assignee_type` \n,`reporter_type` \n,`user_assignee_type` \n,`closure_code` \n,`is_deleted` \n,`last_modified_ts` \n,`extended_attributes_json_DPT_RETRY` \n,`extended_attributes_json__corrupt_record` \n,`extended_attributes_json_accountNumber` \n,`extended_attributes_json_billId` \n,`extended_attributes_json_changeDate` \n,`extended_attributes_json_change_id` \n,`extended_attributes_json_commitmentFee` \n,`extended_attributes_json_cpmChannel` \n,`extended_attributes_json_deviceModel` \n,`extended_attributes_json_distributionChannel` \n,`extended_attributes_json_earlyTerminationFee` \n,`extended_attributes_json_ichOrderId` \n,`extended_attributes_json_imei` \n,`extended_attributes_json_internationalPhoneNumber` \n,`extended_attributes_json_lastExecutedStep` \n,`extended_attributes_json_legacyReturnOption` \n,`extended_attributes_json_noInWarehouse` \n,`extended_attributes_json_parentTicketCategory` \n,`extended_attributes_json_portedTo` \n,`extended_attributes_json_purchaseDate` \n,`extended_attributes_json_reason` \n,`extended_attributes_json_receiptNumber` \n,`extended_attributes_json_refundAmount` \n,`extended_attributes_json_refundOption` \n,`extended_attributes_json_registrationNumber` \n,`extended_attributes_json_returnBy` \n,`extended_attributes_json_returnMethod` \n,`extended_attributes_json_rphRefundLink` \n,`extended_attributes_json_serialNumber` \n,`extended_attributes_json_storeId` \n,`extended_attributes_json_trackingNumber` \n,`tags_json__corrupt_record` \n,`total_disputed_amount_json__corrupt_record` \n,`total_disputed_amount_json_amount` \n,`total_disputed_amount_json_currencyCode` \n,`total_disputed_amount_json_exponent` \n,`total_initial_amount_json__corrupt_record` \n,`total_initial_amount_json_amount` \n,`total_initial_amount_json_currencyCode` \n,`total_initial_amount_json_exponent` \n,`extended_attributes_json_refundParameters_json_POSPaymentBreakdown` \n,`extended_attributes_json_refundParameters_json_billingAccountId` \n,`extended_attributes_json_refundParameters_json_paymentId` \n,`extended_attributes_json_refundParameters_json_paymentProvider` \n,`extended_attributes_json_refundParameters_json_refundId` \n,`extended_attributes_json_refundParameters_json_refundPaymentId` \n,`extended_attributes_json_rentedEquipmentToReturn_json_id` \n,`extended_attributes_json_rentedEquipmentToReturn_json_name` \n,`extended_attributes_json_rentedEquipmentToReturn_json_returnOption` \n,`NUUDL_ValidFrom` \n,`NUUDL_ValidTo` \n,`NUUDL_IsCurrent` \n,`NUUDL_ID` \n,`NUUDL_StandardizedProcessedTimestamp` \n,`NUUDL_CuratedBatchID` \n,`NUUDL_CuratedProcessedTimestamp` \n--,`NUUDL_CuratedSourceFilename` \n \nFROM dai.netcracker.`cpmnrmltroubleticket`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "AzureDatabricksDeltaLakeExportCommand"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": {
							"value": "@pipeline().parameters.WriteBatchSize",
							"type": "Expression"
						},
						"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[orgchartteammember]"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "datalakest01exploration",
							"type": "LinkedServiceReference"
						},
						"path": "adfstage"
					}
				},
				"inputs": [
					{
						"referenceName": "Nuudl_NetCracker_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "dai.netcracker.orgchartteammember"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "[sourceNuudlNetCracker].[orgchartteammember]"
						}
					}
				]
			},
			{
				"name": "Merge_To_History",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_orgchartteammember",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[LoadSourceObjectHistoryInherit]",
					"storedProcedureParameters": {
						"ExtractTable": {
							"value": "sourceNuudlNetCracker.orgchartteammember",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set_Last_Value_Loaded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Merge_To_History",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceCatalogName": {
							"value": "dai",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "netcracker",
							"type": "String"
						},
						"SourceTableName": {
							"value": "orgchartteammember",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"JobIsIncremental": {
				"type": "Bool",
				"defaultValue": true
			},
			"WriteBatchSize": {
				"type": "Int",
				"defaultValue": 10000
			}
		},
		"folder": {
			"name": "0.1_Extracts"
		},
		"annotations": []
	}
}