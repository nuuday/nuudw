{
  "name": "EXT_1_Nuudl_NetCracker_eventtype",
  "properties": {
    "activities": [
      {
        "name": "Update_Meta_Tables",
        "type": "SqlServerStoredProcedure",
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceConnectionType": {
              "value": "AzureDatabricksDeltaLake",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "netcracker",
              "type": "String"
            },
            "SourceObjectName": {
              "value": "eventtype",
              "type": "String"
            },
            "DestinationSchemaName": {
              "value": "sourceNuudlNetCracker",
              "type": "String"
            },
            "WatermarkColumnName": {
              "value": "NUUDL_CuratedBatchID",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            },
            "WatermarkRollingWindowDays": {
              "value": "0",
              "type": "Int32"
            },
            "WatermarkInQuery": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Lookup_Last_Value_Loaded",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Update_Meta_Tables",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "netcracker",
                "type": "String"
              },
              "SourceTableName": {
                "value": "eventtype",
                "type": "String"
              },
              "JobIsIncremental": {
                "value": "@pipeline().parameters.JobIsIncremental",
                "type": "Boolean"
              },
              "ConnectionType": {
                "value": "AzureDatabricksDeltaLake",
                "type": "String"
              },
              "WatermarkIsDate": {
                "value": "False",
                "type": "Boolean"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Copy_eventtype",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "Lookup_Last_Value_Loaded",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "AzureDatabricksDeltaLakeSource",
            "query": {
              "value": "\r\nSELECT \r\n`event_type_id` \r\n,`event_type_name` \r\n,`revenue_code_id` \r\n,`output_fragments_boo` \r\n,`internal_rating_tariff_id` \r\n,`internal_currency_code` \r\n,`partial_match_boo` \r\n,`home_prefix` \r\n,`partial_match_length` \r\n,`event_src_partial_boo` \r\n,`event_src_label_partial_boo` \r\n,`partialevent_support` \r\n,`authorisation_support_boo` \r\n,`event_src_partial_len` \r\n,`event_src_label_partial_len` \r\n,`partialevent_timeout` \r\n,`authorisation_timeout` \r\n,`internal_invoicing_co_id` \r\n,`receivable_class_id` \r\n,`default_tax_binding_id` \r\n,`auth_max_initiation_delay` \r\n,`host_event_type_id` \r\n,`allow_cust_masking_boo` \r\n,`default_mask_bill_id` \r\n,`default_mask_store_id` \r\n,`override_mask_bill_id` \r\n,`override_mask_store_id` \r\n,`cust_pref_deletion_boo` \r\n,`post_bill_retention_days` \r\n,`output_disc_fragments_boo` \r\n,`store_rejects_boo` \r\n,`payment_origin_id` \r\n,`auth_request_threshold` \r\n,`other_request_threshold` \r\n,`attr_set_id` \r\n,`event_aggregate_period` \r\n,`event_aggregate_units` \r\n,`costed_event_store_boo` \r\n,`aggregate_billing_boo` \r\n,`event_end_dtm_attr_num` \r\n,`policy_profile_boo` \r\n,`bypass_event_support` \r\n,`reauthorise_boo` \r\n,`rar_timeout` \r\n,`batchable_type` \r\n,`prod_start_margin` \r\n,`prod_end_margin` \r\n,`margin_assessment` \r\n,`version_num` \r\n,`guiding_scope` \r\n,`ocs_fragmentation_rule` \r\n,`ocs_rate_factor_rule` \r\n,`tariff_time_change_boo` \r\n,`write_off_revenue_code_id` \r\n,`bypass_usage_allowed_boo` \r\n,`ocs_event_boo` \r\n,`notification_suppress_boo` \r\n,`graceful_session_term_enabled` \r\n,`mscc_inst_persistence_option` \r\n,`graceful_term_validity_time` \r\n,`allow_direct_debit_wrteoff_boo` \r\n,`notification_suppression_ind` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM netcracker.`eventtype`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
              "type": "Expression"
            },
            "exportSettings": {
              "type": "AzureDatabricksDeltaLakeExportCommand"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": "@pipeline().parameters.WriteBatchSize",
            "preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[eventtype]"
          },
          "enableStaging": true,
          "stagingSettings": {
            "linkedServiceName": {
              "referenceName": "datalakest01exploration",
              "type": "LinkedServiceReference"
            },
            "path": "adfstage"
          }
        },
        "inputs": [
          {
            "referenceName": "Nuudl_NetCracker_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "netcracker.eventtype"
            }
          }
        ],
        "outputs": [
          {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "[sourceNuudlNetCracker].[eventtype]"
            }
          }
        ]
      },
      {
        "name": "Merge_To_History",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Copy_eventtype",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[LoadSourceObjectHistory]",
          "storedProcedureParameters": {
            "ExtractTable": {
              "value": "sourceNuudlNetCracker.eventtype",
              "type": "String"
            },
            "LoadIsIncremental": {
              "value": "@pipeline().parameters.JobIsIncremental",
              "type": "Boolean"
            },
            "HistoryTrackingColumns": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Set_Last_Value_Loaded",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Merge_To_History",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "netcracker",
              "type": "String"
            },
            "SourceTableName": {
              "value": "eventtype",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      "JobIsIncremental": {
        "type": "Bool",
        "defaultValue": "true",
        "identity": "JobIsIncremental"
      },
      "WriteBatchSize": {
        "type": "Int",
        "defaultValue": 10000,
        "identity": "WriteBatchSize"
      }
    },
    "folder": {
      "name": "0.1_Extracts"
    }
  }
}