{
  "name": "EXT_1_Nuudl_NetCracker_nrmeventdiscount",
  "properties": {
    "activities": [
      {
        "name": "Update_Meta_Tables",
        "type": "SqlServerStoredProcedure",
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceConnectionType": {
              "value": "AzureDatabricksDeltaLake",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "dai.netcrackertest",
              "type": "String"
            },
            "SourceObjectName": {
              "value": "nrmeventdiscount",
              "type": "String"
            },
            "DestinationSchemaName": {
              "value": "sourceNuudlNetCracker",
              "type": "String"
            },
            "WatermarkColumnName": {
              "value": "NUUDL_CuratedBatchID",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            },
            "WatermarkRollingWindowDays": {
              "value": "0",
              "type": "Int32"
            },
            "WatermarkInQuery": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Lookup_Last_Value_Loaded",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Update_Meta_Tables",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "dai.netcrackertest",
                "type": "String"
              },
              "SourceTableName": {
                "value": "nrmeventdiscount",
                "type": "String"
              },
              "JobIsIncremental": {
                "value": "@pipeline().parameters.JobIsIncremental",
                "type": "Boolean"
              },
              "ConnectionType": {
                "value": "AzureDatabricksDeltaLake",
                "type": "String"
              },
              "WatermarkIsDate": {
                "value": "False",
                "type": "Boolean"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Lookup_Source_Schema_Name",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Lookup_Last_Value_Loaded",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "dai.netcrackertest",
                "type": "String"
              },
              "SourceTableName": {
                "value": "nrmeventdiscount",
                "type": "String"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Copy_nrmeventdiscount",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "Lookup_Source_Schema_Name",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "AzureDatabricksDeltaLakeSource",
            "query": {
              "value": "\r\nSELECT \r\n`event_discount_id` \r\n,`catalogue_change_id` \r\n,`discount_name` \r\n,`discount_desc` \r\n,`summation_attr_num` \r\n,`marginal_discount_boo` \r\n,`bonus_scheme_id` \r\n,`periodic_only_boo` \r\n,`revenue_code_id` \r\n,`assessment_aggregation_level` \r\n,`discounting_aggregation_level` \r\n,`assessment_event_type_id` \r\n,`discounting_event_type_id` \r\n,`assessment_filter_id` \r\n,`discounting_filter_id` \r\n,`pro_rating_boo` \r\n,`discount_period` \r\n,`discount_period_units` \r\n,`parametric_boo` \r\n,`aggregation_unit_name` \r\n,`aggregation_rate_multiplier` \r\n,`aggregation_rate_units` \r\n,`synchronise_boo` \r\n,`rating_carry_over_boo` \r\n,`max_carry_over_num` \r\n,`discount_type` \r\n,`priority_num` \r\n,`filter_set` \r\n,`disc_act_thold_set_id` \r\n,`rating_assessment_criteria` \r\n,`include_post_term_boo` \r\n,`rating_accumulate_boo` \r\n,`disc_distribution_boo` \r\n,`amount_per_unit_boo` \r\n,`discount_sum_attr_num` \r\n,`discount_sum_multiplier` \r\n,`discount_sum_name` \r\n,`period_maximum_mny` \r\n,`reset_counter_boo` \r\n,`store_qualifying_usage_boo` \r\n,`apply_until_expired_boo` \r\n,`allocate_full_periods_boo` \r\n,`allocation_period` \r\n,`allocation_period_units` \r\n,`perm_override_enable_rule` \r\n,`temp_override_enable_rule` \r\n,`keep_periods` \r\n,`initial_bonus_award` \r\n,`initial_bonus_reason_id` \r\n,`initial_counter_usage` \r\n,`period_priority_strategy` \r\n,`cost_per_1000_units_mny` \r\n,`lc_profile_id` \r\n,`shared_discount_boo` \r\n,`merge_buckets_boo` \r\n,`dynamic_discount_boo` \r\n,`otc_id` \r\n,`dynamic_allocation_rule` \r\n,`max_num_buckets` \r\n,`allied_discounts_group_id` \r\n,`charge_cash_bundles_boo` \r\n,`net_charge_boo` \r\n,`no_further_discounts_boo` \r\n,`no_further_assessment_boo` \r\n,`discount_pct_granularity` \r\n,`additional_validity_mode` \r\n,`additional_priority_num` \r\n,`ocs_insession_action_type` \r\n,`negotiable_discount_boo` \r\n,`min_discount_pct` \r\n,`max_discount_pct` \r\n,`min_discount_mny` \r\n,`max_discount_mny` \r\n,`shrd_lookup_threshold_value` \r\n,`threshold_assesment_criteria` \r\n,`disc_status_action_set_id` \r\n,`rounding_unit_size` \r\n,`discount_rounding_type` \r\n,`discount_unit_name` \r\n,`zbr_bucket_type` \r\n,`ignore_zero_chg_events` \r\n,`carryover_allowable_count` \r\n,`bucket_release_notif_delay` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcrackertest.`nrmeventdiscount`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
              "type": "Expression"
            },
            "exportSettings": {
              "type": "AzureDatabricksDeltaLakeExportCommand"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": "@pipeline().parameters.WriteBatchSize",
            "preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[nrmeventdiscount]"
          },
          "enableStaging": true,
          "stagingSettings": {
            "linkedServiceName": {
              "referenceName": "datalakest01exploration",
              "type": "LinkedServiceReference"
            },
            "path": "adfstage"
          }
        },
        "inputs": [
          {
            "referenceName": "Nuudl_NetCracker_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "dai.netcrackertest.nrmeventdiscount"
            }
          }
        ],
        "outputs": [
          {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "[sourceNuudlNetCracker].[nrmeventdiscount]"
            }
          }
        ]
      },
      {
        "name": "Merge_To_History",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Copy_nrmeventdiscount",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[LoadSourceObjectHistory]",
          "storedProcedureParameters": {
            "ExtractTable": {
              "value": "sourceNuudlNetCracker.nrmeventdiscount",
              "type": "String"
            },
            "LoadIsIncremental": {
              "value": "@pipeline().parameters.JobIsIncremental",
              "type": "Boolean"
            },
            "HistoryTrackingColumns": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Set_Last_Value_Loaded",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Merge_To_History",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "dai.netcrackertest",
              "type": "String"
            },
            "SourceTableName": {
              "value": "nrmeventdiscount",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      "JobIsIncremental": {
        "type": "Bool",
        "defaultValue": "true",
        "identity": "JobIsIncremental"
      },
      "WriteBatchSize": {
        "type": "Int",
        "defaultValue": 10000,
        "identity": "WriteBatchSize"
      }
    },
    "folder": {
      "name": "0.1_Extracts"
    }
  }
}