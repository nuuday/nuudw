{
	"name": "EXT_1_Nuudl_NetCracker_ibsitemshistory",
	"properties": {
		"activities": [
			{
				"name": "Update_Meta_Tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceConnectionType": {
							"value": "AzureDatabricksDeltaLake",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "dai.netcracker",
							"type": "String"
						},
						"SourceObjectName": {
							"value": "ibsitemshistory",
							"type": "String"
						},
						"DestinationSchemaName": {
							"value": "sourceNuudlNetCracker",
							"type": "String"
						},
						"WatermarkColumnName": {
							"value": "NUUDL_CuratedBatchID",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						},
						"WatermarkRollingWindowDays": {
							"value": "0",
							"type": "Int32"
						},
						"WatermarkInQuery": {
							"value": "",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup_Last_Value_Loaded",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update_Meta_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "dai.netcracker"
							},
							"SourceTableName": {
								"type": "String",
								"value": "ibsitemshistory"
							},
							"JobIsIncremental": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							},
							"ConnectionType": {
								"type": "String",
								"value": "AzureDatabricksDeltaLake"
							},
							"WatermarkIsDate": {
								"type": "Boolean",
								"value": "False"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Lookup_Source_Schema_Name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Lookup_Last_Value_Loaded",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "dai.netcracker"
							},
							"SourceTableName": {
								"type": "String",
								"value": "ibsitemshistory"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Copy_ibsitemshistory",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_Source_Schema_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": {
							"value": "SELECT \n`id` \n,`version` \n,`schema_version` \n,`active_from` \n,`active_to` \n,`is_snapshot` \n,`state` \n,`idempotency_key` \n,`is_deleted` \n,`last_modified_ts` \n,`is_current` \n,`item_json_appliedBusinessBarringId` \n--,`item_json_appliedByBusinessRuleId` \n,`NUUDL_ValidTo` \n,`NUUDL_ValidFrom` \n,`NUUDL_IsCurrent` \n,`item_json_creationDate` \n,`item_json_customerCategoryId` \n,`item_json_customerId` \n,`item_json_disconnectionReason` \n,`item_json_disconnectionReasonDescription` \n,`item_json_distributionChannelId` \n,`item_json_effectiveDate` \n,`item_json_expirationDate` \n,`item_json_id` \n,`item_json_marketId` \n,`item_json_marketingBundleComponentId` \n,`item_json_name` \n,`item_json_offeringId` \n,`item_json_offeringName` \n,`item_json_originalExpirationDate` \n,`item_json_overrideMode` \n,`item_json_parentId` \n,`item_json_previousBusinessGroupId` \n,`item_json_productFamilyId` \n,`item_json_productFamilyName` \n,`item_json_productOrderId` \n--,`item_json_prohibitManualRemoval` \n,`item_json_quoteId` \n,`item_json_rootId` \n,`item_json_startDate` \n,`item_json_state` \n,`item_json_suspended` \n,`item_json_terminationDate` \n,`item_json_type` \n,`item_json_accountRef_json_name` \n,`item_json_accountRef_json_refId` \n,`item_json_accountRef_json_refType` \n--,`item_json_agreementRef_json_agreementType` \n--,`item_json_agreementRef_json_name` \n--,`item_json_agreementRef_json_refId` \n,`item_json_businessBarringRecords_json_businessBarringSpecificationId` \n,`item_json_businessBarringRecords_json_id` \n,`item_json_businessBarringRecords_json_name` \n,`item_json_businessBarringRecords_json_validFrom` \n,`item_json_businessBarringRecords_json_validTo` \n,`item_json_businessGroup_json_id` \n,`item_json_businessGroup_json_marketingBundleId` \n,`item_json_businessGroup_json_name` \n,`item_json_businessGroup_json_type` \n,`item_json_characteristics_json_attributeId` \n,`item_json_characteristics_json_name` \n,`item_json_characteristics_json_offeringCharId` \n,`item_json_characteristics_json_productSpecCharId` \n,`item_json_characteristics_json_value` \n,`item_json_extendedAttributes_json_key` \n,`item_json_extendedAttributes_json_value` \n,`item_json_prices_json_id` \n,`item_json_prices_json_type` \n,`item_json_prices_json_validFrom` \n,`item_json_prices_json_validTo` \n,`item_json_productSpecificationRef_json_id` \n,`item_json_productSpecificationRef_json_name` \n,`item_json_productSpecificationRef_json_version` \n,`item_json_realizingServiceRefs_json_id` \n,`item_json_realizingServiceRefs_json_name` \n,`item_json_realizingServiceRefs_json_refId` \n,`item_json_realizingServiceRefs_json_role` \n--,`item_json_relatedPartyRef_json_name` \n,`item_json_relatedPartyRef_json_refId` \n,`item_json_relatedPartyRef_json_referredType` \n,`item_json_relatedPartyRef_json_role` \n--,`item_json_relatedPartyRef_json_userOfService` \n,`item_json_technicalBarringRecords_json_barringType` \n,`item_json_technicalBarringRecords_json_businessBarringRecordId` \n,`item_json_technicalBarringRecords_json_id` \n,`item_json_technicalBarringRecords_json_technicalBarringSpecificationId` \n,`item_json_technicalBarringRecords_json_validFrom` \n,`item_json_technicalBarringRecords_json_validTo` \n,`item_json_prices_json_alterationPrices_json_alterationOnSuspendedPrice` \n,`item_json_prices_json_alterationPrices_json_discountId` \n,`item_json_prices_json_alterationPrices_json_id` \n,`item_json_prices_json_alterationPrices_json_priceAlterationType` \n--,`item_json_prices_json_alterationPrices_json_reason` \n,`item_json_prices_json_alterationPrices_json_state` \n--,`item_json_prices_json_alterationPrices_json_ticketId` \n,`item_json_prices_json_alterationPrices_json_type` \n,`item_json_prices_json_alterationPrices_json_validFrom` \n,`item_json_prices_json_alterationPrices_json_validTo` \n,`NUUDL_ID` \n,`NUUDL_CuratedBatchID` \n \nFROM dai.netcracker.`ibsitemshistory`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "AzureDatabricksDeltaLakeExportCommand"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": {
							"value": "@pipeline().parameters.WriteBatchSize",
							"type": "Expression"
						},
						"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[ibsitemshistory]"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "datalakest01exploration",
							"type": "LinkedServiceReference"
						},
						"path": "adfstage"
					}
				},
				"inputs": [
					{
						"referenceName": "Nuudl_NetCracker_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "dai.netcracker.ibsitemshistory"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "[sourceNuudlNetCracker].[ibsitemshistory]"
						}
					}
				]
			},
			{
				"name": "Merge_To_History",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_ibsitemshistory",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[LoadSourceObjectHistoryInherit]",
					"storedProcedureParameters": {
						"ExtractTable": {
							"value": "sourceNuudlNetCracker.ibsitemshistory",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set_Last_Value_Loaded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Merge_To_History",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "dai.netcracker",
							"type": "String"
						},
						"SourceTableName": {
							"value": "ibsitemshistory",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"JobIsIncremental": {
				"type": "Bool",
				"defaultValue": true
			},
			"WriteBatchSize": {
				"type": "Int",
				"defaultValue": 10000
			}
		},
		"folder": {
			"name": "0.1_Extracts"
		},
		"annotations": []
	}
}