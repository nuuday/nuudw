{
	"name": "EXT_1_Nuudl_NetCracker_nrmcostedevents",
	"properties": {
		"activities": [
			{
				"name": "Update_Meta_Tables",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceConnectionType": {
							"value": "AzureDatabricksDeltaLake",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "dai.netcrackertest",
							"type": "String"
						},
						"SourceObjectName": {
							"value": "nrmcostedevents",
							"type": "String"
						},
						"DestinationSchemaName": {
							"value": "sourceNuudlNetCracker",
							"type": "String"
						},
						"WatermarkColumnName": {
							"value": "NUUDL_CuratedBatchID",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						},
						"WatermarkRollingWindowDays": {
							"value": "0",
							"type": "Int32"
						},
						"WatermarkInQuery": {
							"value": "",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup_Last_Value_Loaded",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Update_Meta_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "dai.netcrackertest"
							},
							"SourceTableName": {
								"type": "String",
								"value": "nrmcostedevents"
							},
							"JobIsIncremental": {
								"type": "Boolean",
								"value": {
									"value": "@pipeline().parameters.JobIsIncremental",
									"type": "Expression"
								}
							},
							"ConnectionType": {
								"type": "String",
								"value": "AzureDatabricksDeltaLake"
							},
							"WatermarkIsDate": {
								"type": "Boolean",
								"value": "False"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Lookup_Source_Schema_Name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Lookup_Last_Value_Loaded",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
						"storedProcedureParameters": {
							"SourceConnectionName": {
								"type": "String",
								"value": "Nuudl_NetCracker"
							},
							"SourceSchemaName": {
								"type": "String",
								"value": "dai.netcrackertest"
							},
							"SourceTableName": {
								"type": "String",
								"value": "nrmcostedevents"
							}
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "nuuMeta.SourceObjects"
						}
					}
				}
			},
			{
				"name": "Copy_nrmcostedevents",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Lookup_Source_Schema_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": {
							"value": "\nSELECT \n`account_name` \n,`event_source` \n,`event_time` \n,`event_reference` \n,`cluster_sub_id` \n,`created_time` \n--,`cost` \n,`event_lifecycle_type_name` \n,`host_event_type_name` \n,`imported_currency` \n,`managed_fileId` \n,`original_account_name` \n,`receivable_class_name` \n,`revenue_code_name` \n,`row_num` \n,`tariff_name` \n,`original_managed_file_id` \n,`original_row_num` \n,`product_instance_name` \n,`NUUDL_BaseSourceFilename` \n,`NUUDL_BaseBatchID` \n--,`NUUDL_BaseProcessedTimestamp` \n--,`NUUDL_CuratedProcessedTimestamp` \n,`NUUDL_CuratedSourceFilename` \n,`event_type_id` \n,`subscriber_no` \n,`secondary_no` \n,`call_duration` \n,`scalar` \n,`total_volume` \n,`call_dest` \n,`imsi` \n,`cost_ind` \n,`imei` \n,`actual_msisdn` \n,`call_way_ind` \n,`provider_id` \n,`rating_group` \n,`msg_volume` \n,`orig_chg_amt` \n,`text_size` \n,`ocs_charging_ind` \n,`original_call_number` \n,`service_category_code` \n,`tax_exempt_ind` \n,`call_fwd_ind` \n,`content_description` \n,`basic_service_type` \n,`ocs_freetext` \n,`original_event_date_time` \n,`plmn_code` \n,`gd_switch_id` \n,`rat_type` \n,`costcode_description` \n,`rating_element_fixed_charge` \n,`amm_reference` \n,`rounded_duration` \n,`rounded_volume` \n,`price_plan_id` \n,`price_plan_name` \n,`rate_plan_name` \n,`discount_name` \n,`costband_name` \n,`costcode_name` \n--,`costcode_name_sourcecc` \n,`roamed_country` \n,`destination_country` \n,`caller_country` \n,`event_class` \n,`bearer_technology` \n,`infra_provider` \n--,`event_date` \n,`gd_cell_id` \n,`gd_cell_id_last` \n,`apn` \n,`charging_id` \n,`uplink_volume` \n,`downlink_volume` \n--,`event_date_time` \n,`calling_no` \n,`called_no` \n,`call_direction_code` \n,`roam_ind` \n,`vol_seconds` \n,`vol_bytes` \n,`vol_occ` \n,`rounded_vol_seconds` \n,`rounded_vol_bytes` \n,`units_of_measure` \n,`called_country_code` \n,`called_country_exc` \n,`calling_country_code` \n,`calling_country_exc` \n,`call_source` \n,`NUUDL_ID` \n,`NUUDL_CuratedBatchID` \n \nFROM dai.netcrackertest.`nrmcostedevents`\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "AzureDatabricksDeltaLakeExportCommand"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBatchSize": {
							"value": "@pipeline().parameters.WriteBatchSize",
							"type": "Expression"
						},
						"preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[nrmcostedevents]"
					},
					"enableStaging": true,
					"stagingSettings": {
						"linkedServiceName": {
							"referenceName": "datalakest01exploration",
							"type": "LinkedServiceReference"
						},
						"path": "adfstage"
					}
				},
				"inputs": [
					{
						"referenceName": "Nuudl_NetCracker_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "dai.netcrackertest.nrmcostedevents"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "nuudwsqldb01_DynamicDataset",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "[sourceNuudlNetCracker].[nrmcostedevents]"
						}
					}
				]
			},
			{
				"name": "Merge_To_History",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy_nrmcostedevents",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[LoadSourceObjectHistory]",
					"storedProcedureParameters": {
						"ExtractTable": {
							"value": "sourceNuudlNetCracker.nrmcostedevents",
							"type": "String"
						},
						"LoadIsIncremental": {
							"value": {
								"value": "@pipeline().parameters.JobIsIncremental",
								"type": "Expression"
							},
							"type": "Boolean"
						},
						"HistoryTrackingColumns": {
							"value": "",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Set_Last_Value_Loaded",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Merge_To_History",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
					"storedProcedureParameters": {
						"SourceConnectionName": {
							"value": "Nuudl_NetCracker",
							"type": "String"
						},
						"SourceSchemaName": {
							"value": "dai.netcrackertest",
							"type": "String"
						},
						"SourceTableName": {
							"value": "nrmcostedevents",
							"type": "String"
						},
						"WatermarkIsDate": {
							"value": "False",
							"type": "Boolean"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "nuudwsqldb01",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"JobIsIncremental": {
				"type": "Bool",
				"defaultValue": true
			},
			"WriteBatchSize": {
				"type": "Int",
				"defaultValue": 10000
			}
		},
		"folder": {
			"name": "0.1_Extracts"
		},
		"annotations": []
	}
}