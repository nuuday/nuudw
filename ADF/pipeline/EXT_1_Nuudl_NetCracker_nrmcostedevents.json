{
  "name": "EXT_1_Nuudl_NetCracker_nrmcostedevents",
  "properties": {
    "activities": [
      {
        "name": "Update_Meta_Tables",
        "type": "SqlServerStoredProcedure",
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceConnectionType": {
              "value": "AzureDatabricksDeltaLake",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "dai.netcrackertest",
              "type": "String"
            },
            "SourceObjectName": {
              "value": "nrmcostedevents",
              "type": "String"
            },
            "DestinationSchemaName": {
              "value": "sourceNuudlNetCracker",
              "type": "String"
            },
            "WatermarkColumnName": {
              "value": "NUUDL_CuratedBatchID",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            },
            "WatermarkRollingWindowDays": {
              "value": "0",
              "type": "Int32"
            },
            "WatermarkInQuery": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Lookup_Last_Value_Loaded",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Update_Meta_Tables",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "dai.netcrackertest",
                "type": "String"
              },
              "SourceTableName": {
                "value": "nrmcostedevents",
                "type": "String"
              },
              "JobIsIncremental": {
                "value": "@pipeline().parameters.JobIsIncremental",
                "type": "Boolean"
              },
              "ConnectionType": {
                "value": "AzureDatabricksDeltaLake",
                "type": "String"
              },
              "WatermarkIsDate": {
                "value": "False",
                "type": "Boolean"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Lookup_Source_Schema_Name",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Lookup_Last_Value_Loaded",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "Nuudl_NetCracker",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "dai.netcrackertest",
                "type": "String"
              },
              "SourceTableName": {
                "value": "nrmcostedevents",
                "type": "String"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Copy_nrmcostedevents",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "Lookup_Source_Schema_Name",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "AzureDatabricksDeltaLakeSource",
            "query": {
              "value": "\r\nSELECT \r\n`account_name` \r\n,`event_source` \r\n,`event_time` \r\n,`event_reference` \r\n,`cluster_sub_id` \r\n,`created_time` \r\n,`cost` \r\n,`event_lifecycle_type_name` \r\n,`host_event_type_name` \r\n,`imported_currency` \r\n,`managed_fileId` \r\n,`original_account_name` \r\n,`receivable_class_name` \r\n,`revenue_code_name` \r\n,`row_num` \r\n,`tariff_name` \r\n,`original_managed_file_id` \r\n,`original_row_num` \r\n,`product_instance_name` \r\n,`NUUDL_BaseSourceFilename` \r\n,`NUUDL_BaseBatchID` \r\n,`NUUDL_BaseProcessedTimestamp` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n,`NUUDL_CuratedSourceFilename` \r\n,`event_type_id` \r\n,`subscriber_no` \r\n,`secondary_no` \r\n,`call_duration` \r\n,`scalar` \r\n,`total_volume` \r\n,`call_dest` \r\n,`imsi` \r\n,`cost_ind` \r\n,`imei` \r\n,`actual_msisdn` \r\n,`call_way_ind` \r\n,`provider_id` \r\n,`rating_group` \r\n,`msg_volume` \r\n,`orig_chg_amt` \r\n,`text_size` \r\n,`ocs_charging_ind` \r\n,`original_call_number` \r\n,`service_category_code` \r\n,`tax_exempt_ind` \r\n,`call_fwd_ind` \r\n,`content_description` \r\n,`basic_service_type` \r\n,`ocs_freetext` \r\n,`original_event_date_time` \r\n,`plmn_code` \r\n,`gd_switch_id` \r\n,`rat_type` \r\n,`costcode_description` \r\n,`rating_element_fixed_charge` \r\n,`amm_reference` \r\n,`rounded_duration` \r\n,`rounded_volume` \r\n,`price_plan_id` \r\n,`price_plan_name` \r\n,`rate_plan_name` \r\n,`discount_name` \r\n,`costband_name` \r\n,`costcode_name` \r\n,`costcode_name_sourcecc` \r\n,`roamed_country` \r\n,`destination_country` \r\n,`caller_country` \r\n,`event_class` \r\n,`bearer_technology` \r\n,`infra_provider` \r\n,`event_date` \r\n,`gd_cell_id` \r\n,`gd_cell_id_last` \r\n,`apn` \r\n,`charging_id` \r\n,`uplink_volume` \r\n,`downlink_volume` \r\n,`event_date_time` \r\n,`calling_no` \r\n,`called_no` \r\n,`call_direction_code` \r\n,`roam_ind` \r\n,`vol_seconds` \r\n,`vol_bytes` \r\n,`vol_occ` \r\n,`rounded_vol_seconds` \r\n,`rounded_vol_bytes` \r\n,`units_of_measure` \r\n,`called_country_code` \r\n,`called_country_exc` \r\n,`calling_country_code` \r\n,`calling_country_exc` \r\n,`call_source` \r\n,`NUUDL_ID` \r\n,`NUUDL_CuratedBatchID` \r\n \r\nFROM dai.netcrackertest.`nrmcostedevents`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'",
              "type": "Expression"
            },
            "exportSettings": {
              "type": "AzureDatabricksDeltaLakeExportCommand"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": "@pipeline().parameters.WriteBatchSize",
            "preCopyScript": "TRUNCATE TABLE [sourceNuudlNetCracker].[nrmcostedevents]"
          },
          "enableStaging": true,
          "stagingSettings": {
            "linkedServiceName": {
              "referenceName": "datalakest01exploration",
              "type": "LinkedServiceReference"
            },
            "path": "adfstage"
          }
        },
        "inputs": [
          {
            "referenceName": "Nuudl_NetCracker_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "dai.netcrackertest.nrmcostedevents"
            }
          }
        ],
        "outputs": [
          {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "[sourceNuudlNetCracker].[nrmcostedevents]"
            }
          }
        ]
      },
      {
        "name": "Merge_To_History",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Copy_nrmcostedevents",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[LoadSourceObjectHistoryInherit]",
          "storedProcedureParameters": {
            "ExtractTable": {
              "value": "sourceNuudlNetCracker.nrmcostedevents",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Set_Last_Value_Loaded",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Merge_To_History",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "Nuudl_NetCracker",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "dai.netcrackertest",
              "type": "String"
            },
            "SourceTableName": {
              "value": "nrmcostedevents",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      "JobIsIncremental": {
        "type": "Bool",
        "defaultValue": "true",
        "identity": "JobIsIncremental"
      },
      "WriteBatchSize": {
        "type": "Int",
        "defaultValue": 10000,
        "identity": "WriteBatchSize"
      }
    },
    "folder": {
      "name": "0.1_Extracts"
    }
  }
}