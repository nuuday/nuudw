{
  "name": "EXT_1_NuuDL_BIZ_pdindividge",
  "properties": {
    "activities": [
      {
        "name": "Update_Meta_Tables",
        "type": "SqlServerStoredProcedure",
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[UpdateSourceTables]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "NuuDL_BIZ",
              "type": "String"
            },
            "SourceConnectionType": {
              "value": "AzureDatabricksDeltaLake",
              "type": "String"
            },
            "SourceCatalogName": {
              "value": "dai",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "ref",
              "type": "String"
            },
            "SourceObjectName": {
              "value": "pdindividge",
              "type": "String"
            },
            "DestinationSchemaName": {
              "value": "sourceNuudlBIZ",
              "type": "String"
            },
            "WatermarkColumnName": {
              "value": "NUUDL_CuratedBatchID",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            },
            "WatermarkRollingWindowDays": {
              "value": "0",
              "type": "Int32"
            },
            "WatermarkInQuery": {
              "value": "",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Lookup_Last_Value_Loaded",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Update_Meta_Tables",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetLastValueLoaded]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "NuuDL_BIZ",
                "type": "String"
              },
              "SourceCatalogName": {
                "value": "dai",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "ref",
                "type": "String"
              },
              "SourceTableName": {
                "value": "pdindividge",
                "type": "String"
              },
              "JobIsIncremental": {
                "value": "@pipeline().parameters.JobIsIncremental",
                "type": "Boolean"
              },
              "ConnectionType": {
                "value": "AzureDatabricksDeltaLake",
                "type": "String"
              },
              "WatermarkIsDate": {
                "value": "False",
                "type": "Boolean"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Lookup_Source_Schema_Name",
        "type": "Lookup",
        "dependsOn": [
          {
            "activity": "Lookup_Last_Value_Loaded",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "SqlSource",
            "sqlReaderStoredProcedureName": "[nuuMeta].[GetSourceSchemaName]",
            "storedProcedureParameters": {
              "SourceConnectionName": {
                "value": "NuuDL_BIZ",
                "type": "String"
              },
              "SourceCatalogName": {
                "value": "dai",
                "type": "String"
              },
              "SourceSchemaName": {
                "value": "ref",
                "type": "String"
              },
              "SourceTableName": {
                "value": "pdindividge",
                "type": "String"
              }
            }
          },
          "dataset": {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "nuuMeta.SourceObjects"
            }
          }
        }
      },
      {
        "name": "Copy_pdindividge",
        "type": "Copy",
        "dependsOn": [
          {
            "activity": "Lookup_Source_Schema_Name",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "source": {
            "type": "AzureDatabricksDeltaLakeSource",
            "query": {
              "value": "\r\nSELECT \r\n`NUUDL_SourceCreated` \r\n,`NUUDL_SourceUpdated` \r\n--,`FIRMA` \r\n--,`ENHED` \r\n--,`VIRKNR` \r\n,`LOENNR` \r\n--,`LOEBENR` \r\n--,`STATUS` \r\n--,`ANUMMER` \r\n,`EMAIL` \r\n--,`STEDNR` \r\n--,`AONR` \r\n,`KONTORFORK` \r\n--,`KONTORNAVN` \r\n--,`FYSADR` \r\n--,`POSTADR` \r\n--,`STIL_KODE` \r\n--,`INITIALER` \r\n,`NAVN` \r\n--,`FORNAVN` \r\n--,`MELLEMNAVN` \r\n--,`EFTERNAVN` \r\n--,`ADRESSE` \r\n--,`ADRLIN_1` \r\n--,`ADRLIN_2` \r\n--,`ADRLIN_3` \r\n--,`POSTNR` \r\n--,`KOEN` \r\n--,`ANS_DATO` \r\n--,`AFG_DATO` \r\n--,`FOD_DATO` \r\n--,`START_ORLOV` \r\n--,`SLUT_ORLOV` \r\n--,`OMRAADE` \r\n--,`TLFLOK` \r\n--,`TLFDIR` \r\n--,`TLFMOB` \r\n--,`TLFALT` \r\n--,`TLFFAX` \r\n--,`TLFOPS` \r\n--,`TLFUDL` \r\n--,`TJEGREN` \r\n--,`KATEGORI` \r\n--,`AFLFORM` \r\n--,`TILHOER` \r\n--,`ARBSTEDKD` \r\n--,`AENDRET` \r\n--,`OPDATERET` \r\n--,`NORMTID` \r\n--,`TRGRUPPE` \r\n--,`BANKREGNR` \r\n--,`BANKKONTONR` \r\n--,`FAGGRUPPE` \r\n,`NUUDL_ID` \r\n,`NUUDL_ValidFrom` \r\n,`NUUDL_ValidTo` \r\n,`NUUDL_IsCurrent` \r\n--,`BIZ_BatchCreatedID` \r\n--,`BIZ_BatchUpdatedID` \r\n,`NUUDL_PKLatest` \r\n,`NUUDL_BaseSourceFilename` \r\n,`NUUDL_BaseBatchID` \r\n,`NUUDL_BaseProcessedTimestamp` \r\n,`NUUDL_CuratedBatchID` \r\n,`NUUDL_CuratedProcessedTimestamp` \r\n \r\nFROM dai.ref.`pdindividge`\r\n WHERE NUUDL_CuratedBatchID > '@{activity('Lookup_Last_Value_Loaded').output.firstRow.LastValueLoaded}'\r\n\tAND NUUDL_ValidTo > '2023-01-01'",
              "type": "Expression"
            },
            "exportSettings": {
              "type": "AzureDatabricksDeltaLakeExportCommand"
            }
          },
          "sink": {
            "type": "AzureSqlSink",
            "writeBatchSize": "@pipeline().parameters.WriteBatchSize",
            "preCopyScript": "TRUNCATE TABLE [sourceNuudlBIZ].[pdindividge]"
          },
          "enableStaging": true,
          "stagingSettings": {
            "linkedServiceName": {
              "referenceName": "datalakest01exploration",
              "type": "LinkedServiceReference"
            },
            "path": "adfstage"
          }
        },
        "inputs": [
          {
            "referenceName": "NuuDL_BIZ_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "dai.ref.pdindividge"
            }
          }
        ],
        "outputs": [
          {
            "referenceName": "nuudwsqldb01_DynamicDataset",
            "type": "DatasetReference",
            "parameters": {
              "TableName": "[sourceNuudlBIZ].[pdindividge]"
            }
          }
        ]
      },
      {
        "name": "Merge_To_History",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Copy_pdindividge",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[LoadSourceObjectHistoryInherit]",
          "storedProcedureParameters": {
            "ExtractTable": {
              "value": "sourceNuudlBIZ.pdindividge",
              "type": "String"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      },
      {
        "name": "Set_Last_Value_Loaded",
        "type": "SqlServerStoredProcedure",
        "dependsOn": [
          {
            "activity": "Merge_To_History",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ],
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30
        },
        "typeProperties": {
          "storedProcedureName": "[nuuMeta].[SetLastLoadedValue]",
          "storedProcedureParameters": {
            "SourceConnectionName": {
              "value": "NuuDL_BIZ",
              "type": "String"
            },
            "SourceCatalogName": {
              "value": "dai",
              "type": "String"
            },
            "SourceSchemaName": {
              "value": "ref",
              "type": "String"
            },
            "SourceTableName": {
              "value": "pdindividge",
              "type": "String"
            },
            "WatermarkIsDate": {
              "value": "False",
              "type": "Boolean"
            }
          }
        },
        "linkedServiceName": {
          "referenceName": "nuudwsqldb01",
          "type": "LinkedServiceReference"
        }
      }
    ],
    "parameters": {
      "JobIsIncremental": {
        "type": "Bool",
        "defaultValue": "true",
        "identity": "JobIsIncremental"
      },
      "WriteBatchSize": {
        "type": "Int",
        "defaultValue": 10000,
        "identity": "WriteBatchSize"
      }
    },
    "folder": {
      "name": "0.1_Extracts"
    }
  }
}