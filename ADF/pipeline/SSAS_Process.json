{
	"name": "SSAS_Process",
	"properties": {
		"activities": [
			{
				"name": "Start Processing",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Get Secret from Key Vault",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:01:40",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://',pipeline().parameters.RegionName,'.asazure.windows.net/servers/',activity('Get Secret from Key Vault').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes')",
						"type": "Expression"
					},
					"method": "POST",
					"headers": {
						"Content-Type": "application/json"
					},
					"body": {
						"value": "@pipeline().parameters.RefreshCommand",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://*.asazure.windows.net"
					}
				}
			},
			{
				"name": "Get Refreshes",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Start Processing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:01:40",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://',pipeline().parameters.RegionName,'.asazure.windows.net/servers/',activity('Get Secret from Key Vault').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes')",
						"type": "Expression"
					},
					"method": "GET",
					"body": {
						"value": "@pipeline().parameters.RefreshCommand",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://*.asazure.windows.net"
					}
				}
			},
			{
				"name": "Get Latest Refresh",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Refreshes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@json(activity('Get Refreshes').output.Response)",
						"type": "Expression"
					},
					"condition": {
						"value": "@greaterOrEquals(item().startTime,addseconds(activity('Start Processing').output.startTime,-30))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Wait for completion",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Get Latest Refresh",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(activity('Get Refresh Status').output.status,'inProgress'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Wait 15 seconds",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 15
							}
						},
						{
							"name": "Get Refresh Status",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Wait 15 seconds",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:01:40",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat('https://',pipeline().parameters.RegionName,'.asazure.windows.net/servers/',activity('Get Secret from Key Vault').output.value,'/models/',pipeline().parameters.ModelName,'/refreshes/',first(activity('Get Latest Refresh').output.Value).refreshId)",
									"type": "Expression"
								},
								"method": "GET",
								"authentication": {
									"type": "MSI",
									"resource": "https://*.asazure.windows.net"
								}
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Throw if failed",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Wait for completion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('Get Refresh Status').output.status,'failed')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Throw",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "localhost",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "@activity('Get Refresh Status').output",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Get Secret from Key Vault",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "00.05:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat('https://', pipeline().parameters.KeyVaultName,substring(pipeline().DataFactory,lastindexof(pipeline().DataFactory,'-'),sub(length(pipeline().DataFactory),lastindexof(pipeline().DataFactory,'-'))), '.vault.azure.net/secrets/', pipeline().parameters.KeyVaultSecretName, '/?api-version=7.0')",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"RegionName": {
				"type": "string",
				"defaultValue": "westeurope"
			},
			"ModelName": {
				"type": "string",
				"defaultValue": "Nuudata"
			},
			"RefreshCommand": {
				"type": "string",
				"defaultValue": {
					"Type": "Full",
					"CommitMode": "transactional",
					"MaxParallelism": 10,
					"RetryCount": 2
				}
			},
			"KeyVaultName": {
				"type": "string",
				"defaultValue": "nuudata-kv01"
			},
			"KeyVaultSecretName": {
				"type": "string",
				"defaultValue": "SSASServerName"
			}
		},
		"folder": {
			"name": "Toolbox/Azure Analysis Services"
		},
		"annotations": [],
		"lastPublishTime": "2023-07-26T10:46:39Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}